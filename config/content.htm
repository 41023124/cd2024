<h1>About</h1>
<p>網頁: <span class="text-bold"><a class="Link--inTextBlock" href="https://41023124.github.io/cd2024/">https://41023124.github.io/cd2024/</a></span></p>
<p>網誌: <a href="https://41023124.github.io/cd2024/blog">https://41023124.github.io/cd2024/blog</a></p>
<p>簡報: <a href="https://41023124.github.io/cd2024/reveal">https://41023124.github.io/cd2024/reveal</a></p>
<p>倉儲: <a href="https://github.com/41023124/cd2024">https://github.com/41023124/cd2024</a></p>
<p></p>
<h1>cmsimde</h1>
<p><span style="background-color: #ccffcc;">SMap</span> - SiteMap - 依照階次列出網站的所有頁面.</p>
<p><span style="background-color: #ccffcc;">EditA</span> - Edit All page - 將所有頁面放入編輯模式中, 主要用來處理頁面搬遷, 刪除或決定衝突頁面內容版本.</p>
<p><span style="background-color: #ccffcc;">Edit</span> - Edit page - 先選擇要編輯的單一頁面後, 再點選 Edit, 即可進入單一頁面的編輯模式.</p>
<p><span style="background-color: #ccffcc;">Config</span> - Configure Site - 編輯頁面標題與管理者密碼.</p>
<p><span style="background-color: #ccffcc;">Search</span> - 動態頁面內容的關鍵字搜尋.</p>
<p><span style="background-color: #ccffcc;">IUpload</span> - Image file Upload - 圖檔的上傳功能, 可以上傳 jpg, png 與 gif 檔案, 其中若在手機上傳圖檔, 系統會自動將圖片檔案縮小為 800x800 大小.</p>
<p><span style="background-color: #ccffcc;">IList</span> - Image file List - 列出可以直接在頁面編輯模式中引用的圖片檔案.</p>
<p><span style="background-color: #ccffcc;">FUpload</span> - File Upload - 一般檔案的上傳功能, 目前可以上傳的檔案副檔名包括 'jpg', 'png', 'gif', '7z', 'pdf', 'zip', 'ttt', 'stl', 'txt', 'html', 'mp4' 等, 使用者可以自行修改.</p>
<p><span style="background-color: #ccffcc;">FList</span> - File List - 列出可以直接在頁面編輯模式中引用的上傳檔案.</p>
<p><span style="background-color: #ccffcc;">Logout</span> - 登出頁面編輯模式.</p>
<p><span style="background-color: #ccffcc;">Convert</span> - 將動態網站中位於 config/content.htm 檔案, 透過分頁設定轉為 content 目錄中的靜態網頁.</p>
<p><span style="background-color: #ccffcc;">acp</span> - git add, git commit 與 git push, 通常只有在 localhost 或自架主機上利用網頁表單協助將倉儲改版內容推向 Github 倉儲.</p>
<p><span style="background-color: #ccffcc;">SStatic</span> - Start Static Site - 利用 Python 啟動網站伺服功能, 可以讓使用者檢查轉檔後的靜態網站內容.</p>
<p><span style="background-color: #ccffcc;">RStatic</span> - Replit Static Site URL - 僅用於 Replit 模式, 當使用者按下 SStatic 後, 可以按下 RStatic 進入當下尚未推向 Github Pages 的靜態網站.</p>
<p><span style="background-color: #ccffcc;">80</span> - 由 init.py 中 static_port 所決定的連結字串, 一般不使用 80, 只有在 Replit 中為了與動態網站共用 port, 才特別設為 80.</p>
<p></p>
<h1>Replit</h1>
<p><a href="https://replit.com">https://replit.com</a></p>
<p>利用 init_replit 指令安裝所需 Python 模組<br/><br/>chmod u+x init_replit<br/><br/>./init_replit</p>
<p dir="auto">On Replit:</p>
<p dir="auto">.replit: python3 main.py</p>
<p dir="auto">chmod u+x cms init_replit</p>
<p dir="auto">./init_replit</p>
<p dir="auto" style="padding-left: 30px;">for cmsimde_site (not needed): git submodule update --init --recursive</p>
<p dir="auto" style="padding-left: 30px;">for cmsimde: pip install flask flask_cors bs4 lxml pelican markdown gevent</p>
<p dir="auto">password generator: <a href="https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py">https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py</a> </p>
<p dir="auto"></p>
<p dir="auto">for IPv6 only Ubuntu:<br/><br/>.ssh 目錄中的 config, 將 SSH session 名稱設為 github.com:<br/><br/>Host github.com<br/>User git<br/>Hostname github.com<br/>ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p<br/><br/>for Replit:<br/><br/>.ssh 目錄中的 config, 將 SSH session 名稱設為 github.com:<br/><br/>Host github.com<br/>User git<br/>Hostname github.co<br/>#since Replit works for IPv4, therefore no ProxyCommand setting needed<br/>#ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p</p>
<p></p>
<p></p>
<h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p></p>
<p></p>
<p></p>
<p></p>
<h1>每周進度報告</h1>
<h2>w1</h2>
<p>第一周進度</p>
<p>依照mde.tw/cd2024中的 Topics / Video中的影片</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/ETTxsR2xBJ1Mg1Ikuz0lscEB5heQCnNRxTnzD1OPTkDPEA?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=bPQk4F">建立個人課程 cd2024 倉儲與網站的操作影片</a> (7:17)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EdBPsKV-ktZOtvo4InwdSoEBAM4B239cijCPMAb1qAUAxg?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=AUcZgW">設定 Replit 與 Github 應用授權的說明影片</a> (2:44)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EQkTC4PryY5KrohZdneAygIB1d2FCzwpl2tn8cdyG-Q8Vg?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=L28Ued">說明如何設定 Github 雙重認證</a> (6:28)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EQIDGG3E8ElOjzeZrCESQzABRJ2tKiSw1T59WDa3x8FU-w?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=E6LSw5">說明如何利用 Replit 對 cd2024 改版</a> (20:16)</p>
<p>照著影片中的步驟創建個人的cd2024倉儲與網站與如何與Replit連結Github，並更新上推至倉儲去做更新</p>
<p></p>
<p>設定網誌</p>
<p>利用 [OBS] 加上廣播系統錄製的:<span> </span><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EZMAhRju-rdNrUxk9plOglIBMK2WcO3iL1iK11xipW48Mw?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=jogiPc">如何設定個人倉儲中的 Pelican 網誌</a></p>
<p></p>
<h2>w2</h2>
<p>根據上述規劃, 甲班第一分組的期中協同倉儲將位於:<span> </span><a href="https://github.com/mdecd2024/2a-midag1">https://github.com/mdecd2024/2a-midag1</a>, 第一組的期中報告網站將位於:<span> </span><a href="https://mdecd2024.github.io/2a-midag1">https://mdecd2024.github.io/2a-midag1</a>.</p>
<p>說明<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EfhTxuf_qX5NqlZBu3n764wBy1d1un0pOZaItSW2Lao2nw?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=QRghBy">甲班第一組組長如何建立 midag1 Team</a>, 並利用 Codespaces 維護 2a-midag1 分組倉儲</p>
<p>說明如何<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EQm-H5Jrv-lMqpKgjWeXhxsBTEZudKJx1M_NQJQumPZttA?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=6Ib0iC">利用 Replit 管理從 Classroom 取得的分組倉儲</a></p>
<p>待各分組的期中報告 Team 與倉儲全部建立就緒後, 則甲班學員後續可配合期末作業名稱 2a2, 由甲班各組組長建立 Team finalag1, finalag2 ....等.</p>
<p></p>
<p>利用 Codespaces 維護倉儲與網站</p>
<p>說明<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EX2nKmkIMX9EtahHjCFmVg4Bp_6wwEvoKsos6LbRHFl6NA?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=qD4FMu">如何利用 Github Codespaces 維護網站內容</a></p>
<p>由於 Github Codespaces 免費帳號目前每月<a href="https://docs.github.com/en/billing/managing-billing-for-github-codespaces/about-billing-for-github-codespaces">可以使用 120 core hours</a>, 因此使用者可以選擇在 Github 倉儲中編輯 markdown 目錄中的網誌 .md 文章後, 只在需要利用 pelican 轉檔或啟動編輯 config/content.htm 與轉靜態網頁內容時, 才啟用 Codespaces. 如此可以最佳化使用 Codespaces 的免費 core hours.</p>
<p></p>
<p>在近端執行動態網站</p>
<p>說明<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EfEB1UUQFttEu-jLYpAaflsB85I01JJFdI_HectY6T5rrw?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=eYLF26">如何利用近端可攜系統維護分組網站</a></p>
<p></p>
<p></p>
<p>第二周進度</p>
<p>協同產品設計實習的第二週, 主要利用 Github Classroom 進行協同分組, 並引導學員除了 Replit, 可以利用 Github Codespaces 維護個人或分組網站內容.</p>
<p></p>
<p>利用 Github Classroom 指定分組倉儲</p>
<p>由於各分組網站從 Github Classroom 執行配置, 因此該倉儲位於 mdecd2024 帳號下, 雖然各組組員具備對此分組倉儲改版的權限, 但是若將分組倉儲 import 到 Replit, 因為其倉儲擁有者為 mdecd2024, 因此無法從 Replit accoount 項下進行授權, 但是可以利用 ssh-keygen 建立 .ssh 目錄下的 id_rsa 與 id_rsa.pub, 之後除了將公鑰送到 Github 之外, 還需要在 .ssh 目錄中建立 config, 且將倉儲 .git/config 中的 https 協定改為 SSH.</p>
<p>根據上述流程, 可以在 Replit 中以 SSH 模式取得對 Github 帳號下特定倉儲的改版全縣, 只不過 Replit 的免費帳號環境會不定時刪除 /home/runner/.ssh 目錄中的授權資料, 因此若要使用 Replit 維護從 Github Classroom 取得授權的分組倉儲, 必須使用程式方法配置 .ssh 中的 id_rsa 與 config 檔案.</p>
<p>範例分組倉儲:<span> </span><a href="https://github.com/mdecd2024/test-ag1">https://github.com/mdecd2024/test-ag1</a></p>
<p>期中分組作業名稱甲班為 2a, 其中甲班第一組組長必須建立名稱為 midag1 的 Team, 讓第一組的組員員加入. 其餘各組的期中報告 Team 名稱則分別為 midag2, midag3 ....</p>
<p>根據上述規劃, 甲班第一分組的期中協同倉儲將位於:<span> </span><a href="https://github.com/mdecd2024/2a-midag1">https://github.com/mdecd2024/2a-midag1</a>, 第一組的期中報告網站將位於:<span> </span><a href="https://mdecd2024.github.io/2a-midag1">https://mdecd2024.github.io/2a-midag1</a>.</p>
<p>待各分組的期中報告 Team 與倉儲全部建立就緒後, 則甲班學員後續可配合期末作業名稱 2a2, 由甲班各組組長建立 Team finalag1, finalag2 ....等.</p>
<p></p>
<p>利用 Codespaces 維護倉儲與網站</p>
<p>說明<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EX2nKmkIMX9EtahHjCFmVg4Bp_6wwEvoKsos6LbRHFl6NA?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=qD4FMu">如何利用 Github Codespaces 維護網站內容</a></p>
<p>由於 Github Codespaces 免費帳號目前每月<a href="https://docs.github.com/en/billing/managing-billing-for-github-codespaces/about-billing-for-github-codespaces">可以使用 120 core hours</a>, 因此使用者可以選擇在 Github 倉儲中編輯 markdown 目錄中的網誌 .md 文章後, 只在需要利用 pelican 轉檔或啟動編輯 config/content.htm 與轉靜態網頁內容時, 才啟用 Codespaces. 如此可以最佳化使用 Codespaces 的免費 core hours.</p>
<p></p>
<p>ODOO 參考資料</p>
<p><a href="https://www.google.com/search?q=sap+vs+odoo">https://www.google.com/search?q=sap+vs+odoo</a><span> </span>(與 SAP 及 ODOO 有關的搜尋)</p>
<p><a href="https://webthesis.biblio.polito.it/16429/1/tesi.pdf">2021 ANALYSIS OF THE ODOO SOFTWARE CAPABILITIES REGARDING PRODUCT LIFECYCLE MANAGEMENT, MANUFACTURING EXECUTION SYSTEMS AND THEIR INTEGRATION.pdf</a><span> </span>or<span> </span><a href="http://229.cycu.org/2021%20ANALYSIS%20OF%20THE%20ODOO%20SOFTWARE%20CAPABILITIES%20REGARDING%20PRODUCT%20LIFECYCLE%20MANAGEMENT,%20MANUFACTURING%20EXECUTION%20SYSTEMS%20AND%20THEIR%20INTEGRATION.pdf">local download</a><span> </span>(password required) (Odoo 軟體在產品生命週期管理、製造執行系統及其整合上的功能分析)</p>
<p>英文單字查詢:<span> </span><a href="https://0f5839b4-abe3-465d-8e99-c21c6f10d379-00-1lfsoaa18ah3t.kirk.replit.dev/downloads/2021_odoo_reading.html">2021_odoo_reading.html</a></p>
<p>針對以上課程內容, 請利用以下留言系統進行討論:</p>
<h2>w3</h2>
<p>W3 任務交付</p>
<p>cd2024 w3 任務</p>
<p> </p>
<p>1. 請各組將組員的個人課程倉儲 cd2024 設為分組倉儲 2a-midag1 的子模組, 且以各組員的學號作為子模組的名稱</p>
<p> 議題:</p>
<p>如何在倉儲中設定子模組, 為何要將資料設為子模組?</p>
<p>能不能在 Replit 維護分組網站? 其他方法還可以直接使用 Codespaces, Gitpod 與 localhost 維護倉儲與網站</p>
<p>假如仍希望使用 Replit 維護分組網站, 該如何進行?</p>
<p> </p>
<p>2. 請各組員將負責分工處理的 <a href="https://webthesis.biblio.polito.it/16429/1/tesi.pdf" rel="noreferrer noopener" target="_blank" title="https://webthesis.biblio.polito.it/16429/1/tesi.pdf">https://webthesis.biblio.polito.it/16429/1/tesi.pdf</a> 中英文並列資料 (LaTeX) 放在個人的倉儲網站, 最後在分組倉儲中整合建立出各組的期中報告 pdf 檔案</p>
<p>該文章有 87 頁, 若有八名組員, 則每人可分工負責 11 頁, 若兩組以上結合協同, 則可按照規劃, 從文章標題開始到最後一頁, 先分配各組員任務後展開中英文並列編輯, 可以使用翻譯軟體或 ChatGPT 協助進行內容解釋或翻譯, 各組通篇完成中英並列資料整合後, 各學員必須於個人的課程倉儲 cd2024 中整理出協同過程的心得.</p>
<p>當文章翻譯或了解其內容後, 接下來該如何套用到期中報告題目: ODOO PLM 在協同產品設計上的應用 - 以鋼球平衡台機電控制系統設計為例</p>
<p>假如採用 Onshape 進行零組件設計繪圖</p>
<p></p>
<h3>w3-2</h3>
<p></p>
<p>本周為第三周，進度是照著網誌中的影片將組員的個人倉儲設為分組倉儲子模組與有關 LaTeX 轉 pdf 在 Windows 環境, 說明如何利用 LaTeX 協同建立分組報告。</p>
<p></p>
<p>2024 Spring 協同產品設計實習的第三週, 主要說明如何善用 Github Codespaces 與 Gitpod, 以及將組員倉儲設為分組倉儲的子模組, 同時導入 LaTeX 轉 pdf 機制, 啟動期中分組報告的製作.</p>
<p>列出期中分組倉儲與網站</p>
<p><a href="https://mde.tw/cd2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/8ba6fa28317bc7a784d8350e7bc33580/raw/4da5bed66516f7808811839885aedd946e20f17b/list_cd2024_midterm_url.py">cd2024 期中分組倉儲與網站</a></p>
<p>上列連結使用 [Brython] 程式語法, 可直接在網頁中列出特定連結內容, 所採用的程式碼如下:</p>
<div>
<div class="syntaxhighlighter python" id="highlighter_627208">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="python comments"># 從 Brython browser 模組導入 document 與 html</code></div>
<div class="line number2 index1 alt1"><code class="python keyword">from</code> <code class="python plain">browser </code><code class="python keyword">import</code> <code class="python plain">document, html</code></div>
<div class="line number3 index2 alt2"><code class="python comments"># get output html location</code></div>
<div class="line number4 index3 alt1"><code class="python plain">brython_div </code><code class="python keyword">=</code> <code class="python plain">document[</code><code class="python string">"brython_div1"</code><code class="python plain">]</code></div>
<div class="line number5 index4 alt2"><code class="python plain">div </code><code class="python keyword">=</code> <code class="python string">"a"</code></div>
<div class="line number6 index5 alt1"><code class="python plain">org </code><code class="python keyword">=</code> <code class="python string">"mdecd2024"</code></div>
<div class="line number7 index6 alt2"><code class="python plain">midterm </code><code class="python keyword">=</code> <code class="python string">"mid"</code> <code class="python keyword">+</code> <code class="python plain">div </code><code class="python keyword">+</code> <code class="python string">"g"</code></div>
<div class="line number8 index7 alt1"><code class="python plain">group_num </code><code class="python keyword">=</code> <code class="python value">8</code></div>
<div class="line number9 index8 alt2"><code class="python keyword">for</code> <code class="python plain">i </code><code class="python keyword">in</code> <code class="python functions">range</code><code class="python plain">(</code><code class="python value">1</code><code class="python plain">,group_num</code><code class="python keyword">+</code><code class="python value">1</code><code class="python plain">):</code></div>
<div class="line number10 index9 alt1"><code class="python spaces">    </code><code class="python plain">site_url </code><code class="python keyword">=</code> <code class="python string">"<a href="/get_page/w3-2/https:">https://</a>"</code> <code class="python keyword">+</code> <code class="python plain">org </code><code class="python keyword">+</code> <code class="python string">".github.io/2"</code> <code class="python keyword">+</code> <code class="python plain">div </code><code class="python keyword">+</code> <code class="python string">"-"</code> <code class="python keyword">+</code> <code class="python plain">midterm </code><code class="python keyword">+</code> <code class="python functions">str</code><code class="python plain">(i)</code></div>
<div class="line number11 index10 alt2"><code class="python spaces">    </code><code class="python plain">repo_url </code><code class="python keyword">=</code> <code class="python string">"<a href="https://github.com/">https://github.com/</a>"</code> <code class="python keyword">+</code> <code class="python plain">org </code><code class="python keyword">+</code> <code class="python string">"/2"</code> <code class="python keyword">+</code> <code class="python plain">div </code><code class="python keyword">+</code> <code class="python string">"-"</code> <code class="python keyword">+</code> <code class="python plain">midterm </code><code class="python keyword">+</code> <code class="python functions">str</code><code class="python plain">(i)</code></div>
<div class="line number12 index11 alt1"><code class="python spaces">    </code><code class="python plain">brython_div &lt;</code><code class="python keyword">=</code> <code class="python plain">html.A(</code><code class="python string">"2"</code><code class="python keyword">+</code><code class="python plain">div</code><code class="python keyword">+</code><code class="python string">"-"</code><code class="python keyword">+</code><code class="python plain">midterm</code><code class="python keyword">+</code><code class="python functions">str</code><code class="python plain">(i), href</code><code class="python keyword">=</code><code class="python plain">site_url)</code></div>
<div class="line number13 index12 alt2"><code class="python spaces">    </code><code class="python plain">brython_div &lt;</code><code class="python keyword">=</code> <code class="python string">" ("</code></div>
<div class="line number14 index13 alt1"><code class="python spaces">    </code><code class="python plain">brython_div &lt;</code><code class="python keyword">=</code> <code class="python plain">html.A(</code><code class="python string">"repo"</code><code class="python plain">, href</code><code class="python keyword">=</code><code class="python plain">repo_url)</code></div>
<div class="line number15 index14 alt2"><code class="python spaces">    </code><code class="python plain">brython_div &lt;</code><code class="python keyword">=</code> <code class="python string">")"</code></div>
<div class="line number16 index15 alt1"><code class="python spaces">    </code><code class="python plain">brython_div &lt;</code><code class="python keyword">=</code> <code class="python plain">html.BR()</code></div>
<div class="line number17 index16 alt2"> </div>
<div class="line number18 index17 alt1"><code class="python plain">brython_div &lt;</code><code class="python keyword">=</code> <code class="python plain">html.BR()</code></div>
<div class="line number19 index18 alt2"> </div>
<div class="line number20 index19 alt1"><code class="python plain">div </code><code class="python keyword">=</code> <code class="python string">"b"</code></div>
<div class="line number21 index20 alt2"><code class="python plain">midterm </code><code class="python keyword">=</code> <code class="python string">"mid"</code> <code class="python keyword">+</code> <code class="python plain">div </code><code class="python keyword">+</code> <code class="python string">"g"</code></div>
<div class="line number22 index21 alt1"><code class="python plain">group_num </code><code class="python keyword">=</code> <code class="python value">9</code></div>
<div class="line number23 index22 alt2"> </div>
<div class="line number24 index23 alt1"><code class="python keyword">for</code> <code class="python plain">i </code><code class="python keyword">in</code> <code class="python functions">range</code><code class="python plain">(</code><code class="python value">1</code><code class="python plain">,group_num</code><code class="python keyword">+</code><code class="python value">1</code><code class="python plain">):</code></div>
<div class="line number25 index24 alt2"><code class="python spaces">    </code><code class="python plain">site_url </code><code class="python keyword">=</code> <code class="python string">"<a href="/get_page/w3-2/https:">https://</a>"</code> <code class="python keyword">+</code> <code class="python plain">org </code><code class="python keyword">+</code> <code class="python string">".github.io/2"</code> <code class="python keyword">+</code> <code class="python plain">div </code><code class="python keyword">+</code> <code class="python string">"-"</code> <code class="python keyword">+</code> <code class="python plain">midterm </code><code class="python keyword">+</code> <code class="python functions">str</code><code class="python plain">(i)</code></div>
<div class="line number26 index25 alt1"><code class="python spaces">    </code><code class="python plain">repo_url </code><code class="python keyword">=</code> <code class="python string">"<a href="https://github.com/">https://github.com/</a>"</code> <code class="python keyword">+</code> <code class="python plain">org </code><code class="python keyword">+</code> <code class="python string">"/2"</code> <code class="python keyword">+</code> <code class="python plain">div </code><code class="python keyword">+</code> <code class="python string">"-"</code> <code class="python keyword">+</code> <code class="python plain">midterm </code><code class="python keyword">+</code> <code class="python functions">str</code><code class="python plain">(i)</code></div>
<div class="line number27 index26 alt2"><code class="python spaces">    </code><code class="python plain">brython_div &lt;</code><code class="python keyword">=</code> <code class="python plain">html.A(</code><code class="python string">"2"</code><code class="python keyword">+</code><code class="python plain">div</code><code class="python keyword">+</code><code class="python string">"-"</code><code class="python keyword">+</code><code class="python plain">midterm</code><code class="python keyword">+</code><code class="python functions">str</code><code class="python plain">(i), href</code><code class="python keyword">=</code><code class="python plain">site_url)</code></div>
<div class="line number28 index27 alt1"><code class="python spaces">    </code><code class="python plain">brython_div &lt;</code><code class="python keyword">=</code> <code class="python string">" ("</code></div>
<div class="line number29 index28 alt2"><code class="python spaces">    </code><code class="python plain">brython_div &lt;</code><code class="python keyword">=</code> <code class="python plain">html.A(</code><code class="python string">"repo"</code><code class="python plain">, href</code><code class="python keyword">=</code><code class="python plain">repo_url)</code></div>
<div class="line number30 index29 alt1"><code class="python spaces">    </code><code class="python plain">brython_div &lt;</code><code class="python keyword">=</code> <code class="python string">")"</code></div>
<div class="line number31 index30 alt2"><code class="python spaces">    </code><code class="python plain">brython_div &lt;</code><code class="python keyword">=</code> <code class="python plain">html.BR()</code></div>
</div>
</td>
</tr>
</tbody>
</table>
<p>期中協同分組報告</p>
</div>
</div>
<p>請參考<span> </span><a href="https://github.com/mdecd2024/test-ag1">https://github.com/mdecd2024/test-ag1</a><span> </span>中的 latex 目錄與 downloads 目錄中的<span> </span><a href="https://github.com/mdecd2024/test-ag1/blob/main/downloads/report_github.txt">https://github.com/mdecd2024/test-ag1/blob/main/downloads/report_github.txt</a></p>
<p>並根據下列教學範例:</p>
<p>說明<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/ETNuIGNcCd1Lvfeuy1qMnCYBrr8Nhv4OrSVQ2Xfv2o7gdQ?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=8b3kMk">如何將 41123130 的個人倉儲設為 2a-midag2 分組倉儲的子模組</a></p>
<p>說明<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EZbnYCWfEylAmXhpOqXWgZUBMxerlNYRgQsBBjZAQ90lmg?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=8nGXOz">如何將組員的個人倉儲納入分組倉儲成為子模組</a></p>
<p>說明<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EUlbUzMAyBFHrHX7bLPRKzsB3L-T-D413BPuH6pMSEZmjg?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=HjIQab">如何在 Replit 維護分組倉儲</a></p>
<p>由各組員在其個人的 cd2024 倉儲中, 以 LaTeX 格式分工完成下列文章的英文與中文翻譯並列資料, 最後在分組網站的 Release 或 downloads 區完成 2b-midbgx_report.pdf 的製作.</p>
<p>若要在近端使用可攜程式環境編譯分組 LaTeX 報告, 請下載<span> </span><a href="http://229.cycu.org/miktex-portable.7z">miktex-portable.7z</a><span> </span>(需要密碼, 下載 167MB, 解開壓縮檔案後約 1GB) 以及參考資料:<span> </span><a href="http://229.cycu.org/latex_images_github.7z">latex_images_github.7z</a><span> </span>(需要密碼)</p>
<p><a href="https://webthesis.biblio.polito.it/16429/1/tesi.pdf">2021 ANALYSIS OF THE ODOO SOFTWARE CAPABILITIES REGARDING PRODUCT LIFECYCLE MANAGEMENT, MANUFACTURING EXECUTION SYSTEMS AND THEIR INTEGRATION.pdf</a><span> </span>or<span> </span><a href="http://229.cycu.org/2021%20ANALYSIS%20OF%20THE%20ODOO%20SOFTWARE%20CAPABILITIES%20REGARDING%20PRODUCT%20LIFECYCLE%20MANAGEMENT,%20MANUFACTURING%20EXECUTION%20SYSTEMS%20AND%20THEIR%20INTEGRATION.pdf">local</a><span> </span>download (password required) (Odoo 軟體在產品生命週期管理、製造執行系統及其整合上的功能分析)</p>
<p>英文單字查詢:<span> </span><a href="https://mde.tw/cd2024/downloads/2021_odoo_reading.html">2021_odoo_reading.html</a></p>
<p>有關 Codespaces 使用</p>
<p>由於 Github Codespaces 免費帳號目前每月<a href="https://docs.github.com/en/billing/managing-billing-for-github-codespaces/about-billing-for-github-codespaces">可以使用 120 core hours</a>, 因此使用者可以選擇在 Github 倉儲中編輯 markdown 目錄中的網誌 .md 文章後, 只在需要利用 pelican 轉檔或啟動編輯 config/content.htm 與轉靜態網頁內容時, 才啟用 Codespaces. 如此可以最佳化使用 Codespaces 的免費 core hours.</p>
<p>使用 Gitpod 維護倉儲與網站</p>
<p><a href="https://www.gitpod.io/pricing">Gitpod</a><span> </span>與 Codespaces 類似, 也是採用 Visual Studio Code 網際介面, 可讓使用者維護位於 Github 的倉儲, 只是個人的 cd2024 倉儲, 以 Github 帳號登入 Gitpod 之後, 可以直接維護, 但是分組網站是從 Github Classroom mdecd2024 帳號下派任, 與 Replit 環境維護分組網站的方法相同, 必須自行建立 .ssh 下的 id_rsa 與 config, 差別是一旦在 Gitpod 導入的分組網站 SSH 管理權限, 不會像 Replit 免費帳號下, 系統會定期刪除免費帳號使用者的 .ssh 目錄.</p>
<p>在 Gitpod 導入 Github 倉儲後, 路徑位於 /workspace/ 目錄下, 但是 .ssh 目錄則位於 /home/gitpod/.ssh, 當使用者執行 cd 則會進入 /home/gitpod 目錄, 且使用者在 Gitpod 的 Dashboard 可以從<span> </span><a href="https://gitpod.io/">https://gitpod.io</a><span> </span>進入.</p>
<p>說明<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EbzYBmhiU5RCmvk03IlcwEYBwuosEIcMU6SFpsJ9TO9wVg?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=FHa6FN">使用 Gitpod 維護個人網站</a></p>
<p>說明<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/Ea2FTZtE5XdDl6SFiECqd60BRul1R6hfHAJ0ZTiQt69Neg?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=TMqAwC">使用 Gitpod 維護分組網站</a></p>
<p>電腦教室中的協同設計</p>
<p>cd2024 起, 電腦輔助設計室中的每一台電腦已經各自擁有一個外部 IPv4 網址, 因此各組員可將個人倉儲與分組倉儲 git clone 至隨身碟, 利用 Token 或 SSH session 授權維護倉儲與網站內容.</p>
<p>如何利用 Classic Token 授權維護倉儲與網站</p>
<p>ODOO 參考資料</p>
<p><a href="https://www.google.com/search?q=sap+vs+odoo">https://www.google.com/search?q=sap+vs+odoo</a><span> </span>(與 SAP 及 ODOO 有關的搜尋)</p>
<p><a href="https://webthesis.biblio.polito.it/16429/1/tesi.pdf">2021 ANALYSIS OF THE ODOO SOFTWARE CAPABILITIES REGARDING PRODUCT LIFECYCLE MANAGEMENT, MANUFACTURING EXECUTION SYSTEMS AND THEIR INTEGRATION.pdf</a><span> </span>or<span> </span><a href="http://229.cycu.org/2021%20ANALYSIS%20OF%20THE%20ODOO%20SOFTWARE%20CAPABILITIES%20REGARDING%20PRODUCT%20LIFECYCLE%20MANAGEMENT,%20MANUFACTURING%20EXECUTION%20SYSTEMS%20AND%20THEIR%20INTEGRATION.pdf">local download</a><span> </span>(password required) (Odoo 軟體在產品生命週期管理、製造執行系統及其整合上的功能分析)</p>
<p>英文單字查詢:<span> </span><a href="https://0f5839b4-abe3-465d-8e99-c21c6f10d379-00-1lfsoaa18ah3t.kirk.replit.dev/downloads/2021_odoo_reading.html">2021_odoo_reading.html</a></p>
<p>將組員的個人倉儲設為分組倉儲子模組</p>
<p>cd2024 課程希望將各分組的組員個人網站, 以 submodule 的方式納入各分組倉儲與網站, 設定的指令為:</p>
<p>git submodule add 組員的個人倉儲網址 組員的學號</p>
<p>例如: 假設組員的 cd2024 個人倉儲位於: https://github.com/scrum-1/cd2024, 且該組員的學號為 41123299, 則該組員必須在進入該組的倉儲目錄後, 執行:</p>
<p>git submodule add https://github.com/scrum-1/cd2024.git 41123299</p>
<p>如此, Github 帳號為 scrum-1 的組員, 其個人倉儲就會設定為分組倉儲的子模組, 而且是以其學號命名此一子模組的目錄名稱. 這樣設定的好處是: 各組員可以自行管理個人的課程倉儲與網站, 也就是位於其 Github 帳號下的 cd2024, 並且自行決定要整合到分組倉儲與網站的版本. 也能將自己在課程網站的資料, 直接用連結導入分組網站, 無需額外將資料搬進分組倉儲.</p>
<p>另外一個使用 Github Classroom 派送分組倉儲的好處, 是 mdecycu 自動成為各分組倉儲的管理者之一, 若各組在改版或解決衝突的過程發生問題, mdecycu 可以協助處理.</p>
<p>一旦分組倉儲帶有以各組員學號作為子模組之後, git clone 倉儲必須使用:</p>
<p>git clone --recurse-submodules 加上各組的倉儲 URL</p>
<p>以第一組期中分組倉儲的 git clone 為例, 並且使用 putty session 名稱 github.com:</p>
<p>git clone --recurse-submodules git@github.com:mdecd2024/2b-midbg1.git</p>
<p>而且若要在分組倉儲中更新各組員的子模組版本, 則必須更換目錄到該組員的學號目錄中並且使用 git pull origin main, 才能取下該組員其 cd2024 個人倉儲的最新內容. 取下組員資料後, 若要新增提交推送, 則必須再更換目錄回分組倉儲後才能執行.</p>
<p>有關 LaTeX 轉 pdf</p>
<p>在 Windows 環境, 說明<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/ESjVHtGM6_VHhiXfHVspzXwBdvHAx67b__YfRmxX6fRU2Q?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=wKRtj2">如何利用 LaTeX 協同建立分組報告</a></p>
<p>使用<span> </span><a href="https://github.com/features/actions">Github Actions</a><span> </span>執行轉檔:<span> </span><a href="https://github.com/mdecd2024/test-ag1/blob/main/.github/workflows/main.yml">https://github.com/mdecd2024/test-ag1/blob/main/.github/workflows/main.yml</a></p>
<p>倉儲中的 latex 目錄:<span> </span><a href="https://github.com/mdecd2024/test-ag1/tree/main/latex">https://github.com/mdecd2024/test-ag1/tree/main/latex</a></p>
<p>利用可攜程式編譯 LaTeX</p>
<p>下載<span> </span><a href="http://229.cycu.org/miktex-portable.7z">miktex-portable.7z</a><span> </span>(需要密碼, 下載 167MB, 解開壓縮檔案後約 1GB)</p>
<p>下載<span> </span><a href="http://229.cycu.org/latex_images_github.7z">latex_images_github.7z</a><span> </span>(需要密碼)</p>
<p>協同產品設計實習分組期中報告 LaTeX 範本:</p>
<p>下載<span> </span><a href="https://mdecd2024.github.io/test-ag1/downloads/cd2024_midterm_report_latex_ex.7z">cd2024_midterm_report_latex_ex.7z</a></p>
<p>設定網誌</p>
<p>利用 [OBS] 加上廣播系統錄製的:<span> </span><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EZMAhRju-rdNrUxk9plOglIBMK2WcO3iL1iK11xipW48Mw?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=jogiPc">如何設定個人倉儲中的 Pelican 網誌</a></p>
<p>設定網誌Odoo PLM 功能</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EcZiPwkDRrRKsk1AZbIEyG0B9bbqkh5X2q_F5LZyU_T3Bw?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=l78YjF">簡介 Odoo PLM 用法</a></p>
<p>設定個人網誌系統</p>
<p>利用<span> </span><a href="https://github.com/mdecycu/cmsimde_site">https://github.com/mdecycu/cmsimde_site</a><span> </span>建立的網站, 其動態網站資料位於 config/content.htm, 轉換完成的靜態網站資料位於 content 目錄中.</p>
<p>網誌的原始檔案位於 markdown 目錄, 所使用的網誌系統為<span> </span><a href="https://getpelican.com/">Pelican</a>, 轉換完成的網誌內容則位於 blog 目錄. 將 markdown 網誌轉為網誌的指令為: pelican markdown -o blog -s local_publishconf.py 表示使用了 local_publishconfig.py 設定, 其餘與 blog 有關的設定檔案還有:</p>
<p>pelicanconf.py 與 publishconf.py 等.</p>
<p>為了順利完成上述個人課程網站的網誌設定, 必須根據各用戶所使用的 github 帳號對這三個 .py 檔案進行設定.</p>
<p>OnShape 帳號</p>
<p>若網路順暢, 可以登入<span> </span><a href="https://onshape.com/">https://onshape.com</a><span> </span>利用<span> </span><a href="https://appstore.onshape.com/apps/Manufacturers%20Models/2ZT7X5D646R3LM3ZND7LGBTYRVM4SVH6CDDGM6I=/description">MKCad Library</a><span> </span>或<span> </span><a href="https://appstore.onshape.com/apps/Utilities/AXY4DAPNAXVQR7R5AGYM3AE34FEWJ5PI56RG4UI=/description">VEX Part Library</a><span> </span>零件程式庫建立產品系統模型.</p>
<p>CoppeliaSim</p>
<p><a href="http://229.cycu.org/CoppeliaSimEdu_4.5.1_rev4_for_cd2023.7z">CoppeliaSim 4.5.1 rev1 for IPv6.7z</a><span> </span>(169MB, password required to download)</p>
<p>可以結合可攜程式環境:<span> </span><a href="http://229.cycu.org/portable_2024.7z">portable_2024.7z</a><span> </span>(需要密碼, 下載 540MB, 解開壓縮後約 1.8GB) 進行機電系統設計與模擬.</p>
<p>模型簡化</p>
<p>為了讓機電產品能在 CoppeliaSim 動態場景中順暢模擬, 各零組件必須有效進行簡化, 此一零件簡化過程如何後續對零組件進行應力或其他動態系統分析之前, 必須先簡化零組件外型後再進行網格化的應用相同.</p>
<p>針對以上課程內容, 請利用以下留言系統進行討論:</p>
<h2>w4</h2>
<p>協同產品設計實習的第四週, 各分組需要明確界定任務需求與分工時序, 隨著各組協同設計流程的進行, 分組倉儲與網站的改版越發複雜, 此時若導入 Source Tree 協助各組員更清楚看到倉儲改版架構, 另外 Git Branch 的應用.</p>
<p></p>
<p>教學影片分組整理並自評</p>
<p></p>
<p>假如你好奇這個概念哪裡來的: 請參考<a href="https://github.com/mdecycu/cd2024/discussions/2">反思一</a><span> </span>and<span> </span><a href="https://github.com/mdecycu/mdecycu.github.io/discussions/3">反思二</a>.</p>
<p>對於事不關己或者不明白為何團隊中的成員 (這裡指教與學的相關人、事與物), 總讓人提不起興趣, 但若能在過程中找到主要在乎的角色、任務或者緣由, 或許就能從應付著手, 一直到終於了解天下沒有白吃的午餐, 所有的努力付出, 終究不會白費.</p>
<p>此外, 假如想參考先前學長推甄研究所的相關資訊, 請利用 Team code: n9k585c 進入自行查看.</p>
<p></p>
<p>w4 2a 分組任務</p>
<p></p>
<p>請各組自行搜尋前面已經發布的教學影片, 分別</p>
<ul>
<li>在影片上填上字幕, 另行上傳到可以嵌入到各分組的網站上</li>
<li>從影片字幕中整理出逐字稿, 放在影片下方, 以 .txt 連結安排</li>
<li>並在各嵌入的教學影片下方, 以摘要方式說明該影片的教學重點</li>
</ul>
<p></p>
<p>Github 個人與分組倉儲的維護方式</p>
<p></p>
<p>個人的倉儲名稱為 cd2024, 而期中的分組倉儲位於 mdecd2024 帳號下, 以2a 開頭, 加上 "-" 之後再補上 midag + 組別, 且各組員的 cd2024 個人倉儲必須設為各分組倉儲的子模組, 目的在各組員可以自行管理並維護自己的課程倉儲, 並決定要引入分組倉儲的內容版次.</p>
<p>各組員與分組倉儲的資料, 包括文字資料 (含 LaTeX 報告章節資料)、零組件檔案、零件工程圖或組立圖檔 (含 BOM 與爆炸圖), 以及目前正在整理的教學影片, 或者是各學員將操作流程錄製成的影片或 Wink 資料.</p>
<p></p>
<p>第一種介紹的倉儲維護方式 - Replit</p>
<p></p>
<p>有關 Replit 的開發歷史, 可以參考<a href="https://mdecd2024.github.io/test-ag1/content/AI.html">這裡</a>與 ChatGPT 的對話內容.</p>
<p>Replit 目前所提供的免費帳號, 雖然沒有太多的運算資源, 但並沒有使用時間的限制, 因此若能利用 python3 main.py 執行動態網站, 而且利用 python3 main2.py 執行靜態網站, 只要區分開動態網站與靜態網站的使用, 就可以順利在 Replit 上維護個人與分組的網站內容.</p>
<p>下載<span> </span><a href="https://mde.tw/wcm2024/downloads/main2.txt">main2.txt</a><span> </span>與<span> </span><a href="https://mde.tw/wcm2024/downloads/static.txt">static.txt</a>, 其中包含 main2.py 與 static.py, 只要在 Shell 執行 python3 main2.py 就可以執行倉儲內的靜態網站檢視. 另一方面, 若要取消先前執行 python3 main2.py, 只需要在 Shell 頁面按下 ctrl + c, c 代表 cancle 也就是取消. 然後若要執行動態網站，可以在 Shell 執行 python3 main.py 或者使用 Replit 的 Run 按鍵.</p>
<p>說明<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/ERnjR87AyRpCnxB2Md2BWKAB7UyHg1FbBl0lDn8MFS19Cg?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=z4WWL6">如何在 Replit 檢視靜態網站</a>教學影片</p>
<p>說明<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EbuB_eNbGMlErR95cQtPz9gBnFGL_lJtBtS1EXJ_OMUcuA?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=7SfxEM">如何下載 replit_main2.7z 並在倉儲中建立兩個檔案</a>教學影片</p>
<p>使用 Replit 維護個人網站時, 可以在登入 Github 後, 連線到 Replit 取得雙方認證, import 個人 cd2024 倉儲後, 經過改版就可以將資料推向 Github.</p>
<p>但目前免費 Replit 帳號僅允許開啟一個 Web server 埠號之外, 並無法將一個 Replit 延伸授權至兩個 Github 帳號, 因此若在個人的 Replit 帳號中 import 分組網站, 必須自行設定與 Github 帳號的推送授權, 也就是利用帳號下的 token 或 OpenSSH keys 設定.</p>
<p>首先考量在 Replit 導入的倉儲使用 token 是否可行, 答案是: 不可, 原因是: 任何人只要透過<span> </span><a href="https://replit.com/@wcms/cd2024?v=1#.git/config">https://replit.com/@wcms/cd2024?v=1#.git/config</a><span> </span>就可以看到免費帳號下的任一個倉儲的 .git/config, 若其中帶有個人帳號授權的 token, 任何人都能用來對此倉儲進行改版.</p>
<p>因此剩下的方案就是採用 OpenSSH 的 keys 設定, 在各自的 /home/runner/.ssh 中配置 config 與 id_rsa, 並將 id_rsa 對應的公鑰登錄到 Github 帳號下.</p>
<p>其中由於 Replit 與 Github 都支援 IPv4 網路協定, 因此 config 設定為:</p>
<div>
<div class="syntaxhighlighter jscript" id="highlighter_735591">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="jscript plain">Host github.com</code></div>
<div class="line number2 index1 alt1"><code class="jscript plain">User git</code></div>
<div class="line number3 index2 alt2"><code class="jscript plain">Hostname github.com</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>上述 config 設定檔案表示, Host 名稱即為 Windows 環境使用 Putty 設定時的 session 名稱, 因此 &lt;https://replit.com/@wcms/cd2024?v=1#.git/config 若採用 OpenSSH 協定對 Github 連線, 則必須將原本的:</p>
<p></p>
<div>
<div class="syntaxhighlighter jscript" id="highlighter_651209">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="jscript plain">[remote </code><code class="jscript string">"origin"</code><code class="jscript plain">]</code></div>
<div class="line number2 index1 alt1"><code class="jscript plain">url = https:</code><code class="jscript comments">//github.com/mdecycu/cd2024</code></div>
<div class="line number3 index2 alt2"><code class="jscript plain">fetch = +refs/heads/&lt;em&gt;:refs/remotes/origin/&lt;/em&gt;</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p></p>
<p>改為:</p>
<div>
<div class="syntaxhighlighter jscript" id="highlighter_162530">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="jscript plain">[remote </code><code class="jscript string">"origin"</code><code class="jscript plain">]</code></div>
<div class="line number2 index1 alt1"><code class="jscript plain">url = git@github.com:mdecycu/cd2024</code></div>
<div class="line number3 index2 alt2"><code class="jscript plain">fetch = +refs/heads/*:refs/remotes/origin/*</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>上列的 "url = git@github.com:mdecycu/cd2024" 表示將透過 SSH (Secure SHell) 協定, 使用 git 作為遠端登入的帳號, 並且根據 config 中的 Host 設定做為代表字串, 連線到 Hostname, 也就是 github.com, 登入後, 利用 id_rsa 與 ":" 後的 mdecycu 帳號下的 OpenSSH 登錄的 public keys 進行比對, 若吻合, 則可以授權對旗下的 cd2024 倉儲進行改版.</p>
<p>只不過 Replit 免費帳號下的 /home/runner/.ssh 會在每次雲端系統整理的時候被系統刪除 (原因不明, 有可能是用來區分付費帳號與免費帳號的使用權限), 但是在系統刪除此一授權的區間, Replit 免費帳號使用者可以透過將設定在 /home/runner/.ssh 目錄下的 config 與 id_rsa 下載到 USB 隨身碟, 一旦發現分組倉儲下的授權被系統移除後, 再利用動態網站將 config.txt 與 id_rsa.txt (因為內建的網站允許 .txt 檔案上傳) 傳到 downloads 目錄下, 然後再利用 python3 ssh.py 將此兩個授權資料放到正確的 /home/runner/.ssh 目錄下, 並設定正確的 id_rsa 檔案存取權限 (必須移除 other 與 group 的 rwx 權限)</p>
<p>上述用來搬遷 (move) config.txt 與 id_rsa.txt, 並設定 id_rsa 檔案屬性的 ssh.py 程式如下:</p>
<div>
<div class="syntaxhighlighter python" id="highlighter_844338">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="python keyword">import</code> <code class="python plain">os</code></div>
<div class="line number2 index1 alt1"><code class="python keyword">if</code> <code class="python keyword">not</code> <code class="python plain">os.path.exists(</code><code class="python string">"/home/runner/.ssh"</code><code class="python plain">): </code></div>
<div class="line number3 index2 alt2"><code class="python spaces">    </code><code class="python plain">os.makedirs(</code><code class="python string">"/home/runner/.ssh"</code><code class="python plain">) </code></div>
<div class="line number4 index3 alt1"><code class="python plain">os.system(</code><code class="python string">"mv ./downloads/id_rsa.txt /home/runner/.ssh/id_rsa"</code><code class="python plain">)</code></div>
<div class="line number5 index4 alt2"><code class="python plain">os.system(</code><code class="python string">"mv ./downloads/config.txt /home/runner/.ssh/config"</code><code class="python plain">)</code></div>
<div class="line number6 index5 alt1"><code class="python plain">os.system(</code><code class="python string">"chmod og-rwx /home/runner/.ssh/id_rsa"</code><code class="python plain">)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>其中的 os 模組導入後, 可以利用 os.system() 執行系統指令, 且最前面的 if 迴圈可以檢查是否存在 .ssh 目錄, 若已經被系統刪除, 可以透過 os.makedirs 建立此一目錄.</p>
<p></p>
<p>第二種介紹的倉儲維護方式 - Codespaces</p>
<p></p>
<p>位於<span> </span><a href="https://github.com/codespaces">https://github.com/codespaces</a>, 是 Github 帳號下個倉儲的延伸功能, 每一個免費 Github 帳號每個月有 120 core-hours 的使用限制, 每一個免費 codespace 最小配置 2core, 可以提升至 4core.</p>
<p>Codespaces 的網際介面為 Visual Studio Code, 支援多終端機、多埠號伺服, 且可從各倉儲的 Code 頁面中直接啟動, 並直接使用 Github 帳號的管理授權, 因此使用者登入 Github 帳號後, 可以直接利用 Codespaces 管理個人與分組倉儲, 無需額外再設定倉儲的管理授權.</p>
<p>在 Codespaces 執行動態網站的指令為 python3 main.py, 而執行靜態網站則必須從表單新增一個終端機, 然後利用 python3 -m http.server 執行靜態網站, 一旦網站啟動, Visual Studio Code 就會將內埠號轉為 443 並且利用編碼產生伺服器的網路符號名稱.</p>
<p></p>
<p>第三種介紹的倉儲維護方式 - Gitpod</p>
<p></p>
<p>位於<span> </span><a href="https://gitpod.io/">https://gitpod.io</a>, 是一套類似 Codespaces 的雲端 IDE 服務系統, 可以直接採 Github 帳號登入, 免費使用授權時間為每月 50 小時, 若採 Github 帳號登入, 則可以直接導入該帳號下的個人倉儲進行維護.</p>
<p>但是若導入分組倉儲, 則必須自行設定推送授權, 由於 Gitpod 並無像 Replit 帳號下的固定連線網址, 因此前述取得對分組倉儲的授權, 可以採 token 與 SSH 等兩種方式, 但目前並未測試是否設定完成的 /home/gitpod/.ssh 目錄, 是否會遭系統刪除.</p>
<p>Gitpod 與 Codespaces 相同, 支援多終端機 (Terminal) 與多埠號, 使用者可以同時執行個人與分組倉儲的動態與靜態網站.</p>
<p>在 Gitpod 執行動態網站的指令為 python3 main.py, 而執行靜態網站則必須從表單新增一個終端機, 然後利用 python3 -m http.server 執行靜態網站, 一旦網站啟動, Visual Studio Code 就會將內埠號轉為 443 並且利用編碼產生伺服器的網路符號名稱.</p>
<p></p>
<p>第四種介紹的倉儲維護方式 - localhost</p>
<p></p>
<p>localhost 採用的是<span> </span><a href="http://229.cycu.org/portable_2024.7z">portable_2024</a><span> </span>可攜程式系統, 啟動後, 可以用來執行個人與分組的倉儲維護, 只是若在 Windows 系統可以選擇較簡單的 token 綁定授權, 或者使用 Putty 設定的 SSH 使用授權, 唯一必須注意的是, Putty 所建立的 session 資料會直接登錄到操作系統的登錄檔案 (Registry), 使用者必須將此 session 以 .reg 的格式匯出, 存在隨身碟, 並在每次要使用此一授權時, 以滑鼠在實體檔案路徑下的 my_putty_session.reg (不能使用虛擬的檔案路徑, 例如: 不能點擊位於 Y: 目錄下的 .reg 登錄設定檔案)</p>
<p>localhost 中的可攜程式系統還帶有 CoppeliaSim、NX 可攜與啟動批次檔案、ShareX、Wink 以及 Solvespace 等檔案, 其中的 CoppeliaSim 用於控制系統設計與模擬, 而 NX 則用於各組員協同繪製目標產品的零組件, ShareX 與 Wink 則用來建立操作流程影片, Solvespace 則可用於平面機構模擬以及初步的零組件尺寸規劃用.</p>
<p>在 localhost 執行動態網站的指令為 python cmsimde/wsgi.py, 也可以透過 cms.bat 執行上列指令.</p>
<p>而執行靜態網站則可以在另一個命令列中, 利用 python3 -m http.server 執行靜態網站, 一旦網站啟動, Python 就以內建的 8000 作為伺服器埠號, 並在 http://localhost:8000 中伺服.</p>
<p></p>
<p>利用 NX1872 協同繪製零組件</p>
<p></p>
<p>註: 目前可下載最新的 NX 版本為 2312.4001, 惟系上授權版本僅配置到 2206, 必須更新授權後才可以支援 2212、2306 與 2312 版本 (每半年發布一個新版本).</p>
<p>從電腦輔助設計室中的電腦 C:\Program Files\Siemens\NX1872 取得所需的 NX 套件目錄檔案, 之後將 NX1872 目錄存入隨身碟後, 可利用下列 start_USB_nx1872.bat 啟動.</p>
<p>電腦輔助設計室中 C: 安裝 NX1872, D: 則配置 NX2206 與 NX12, 若在電腦教室則可利用下列批次檔案啟動 NX, 若在各自的電腦或隨身碟帶有各版次的 NX 資料, 只需要透過網路取得授權, 就可直接從 USB 中執行各版次的 NX.</p>
<p>下載<a href="http://229.cycu.org/NX2027.3401_lite_cad2022.7z">NX2027_lite</a><span> </span>(需要密碼, 解開後約 8G)</p>
<p>使用不同版本 NX 執行繪圖, 該如何協同設計?</p>
<p>start_USB_nx1872.bat 可以啟動 USB 隨身碟中的 NX1872.</p>
<div>
<div class="syntaxhighlighter jscript" id="highlighter_952836">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="jscript plain">@echo off</code></div>
<div class="line number2 index1 alt1"><code class="jscript plain">set Disk=z</code></div>
<div class="line number3 index2 alt2"><code class="jscript plain">subst %Disk%: </code><code class="jscript string">"NX1872"</code></div>
<div class="line number4 index3 alt1"><code class="jscript plain">%Disk%:</code></div>
<div class="line number5 index4 alt2"><code class="jscript plain">set SPLM_LICENSE_SERVER=28000@NX_license_server_IP</code></div>
<div class="line number6 index5 alt1"><code class="jscript plain">set UGII_LANG=english</code></div>
<div class="line number7 index6 alt2"><code class="jscript plain">set UGS_LICENSE_BUNDLE=ACD11,ACD10</code></div>
<div class="line number8 index7 alt1"><code class="jscript plain">set ugii=%Disk%:\ugii</code></div>
<div class="line number9 index8 alt2"><code class="jscript plain">path = %ugii%;%path%</code></div>
<div class="line number10 index9 alt1"><code class="jscript plain">start ugraf -nx</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>start_cadlab_nx1872.bat 可以利用 C: 安裝的 NX1872 啟動. 必須特別注意的是, 無論使用 USB 或電腦安裝的套件啟動, 相關設定檔案均會存在電腦的 AppData 目錄中. 就 NX1872 而言, 這些設定檔案會存在 C:\Users\Admin\AppData\Local\Siemens\NX1872 中, 使用者必須在啟動可攜時將先前的設定轉存至對應的目錄下.</p>
<div>
<div class="syntaxhighlighter jscript" id="highlighter_810871">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="jscript plain">@echo off</code></div>
<div class="line number2 index1 alt1"><code class="jscript plain">set Disk=z</code></div>
<div class="line number3 index2 alt2"><code class="jscript plain">subst %Disk%: </code><code class="jscript string">"NX1872"</code></div>
<div class="line number4 index3 alt1"><code class="jscript plain">%Disk%:</code></div>
<div class="line number5 index4 alt2"><code class="jscript plain">set SPLM_LICENSE_SERVER=28000@NX_license_server_IP</code></div>
<div class="line number6 index5 alt1"><code class="jscript plain">set UGII_LANG=english</code></div>
<div class="line number7 index6 alt2"><code class="jscript plain">set UGS_LICENSE_BUNDLE=ACD11,ACD10</code></div>
<div class="line number8 index7 alt1"><code class="jscript plain">set ugii=C:\Program Files\Siemens\NX1872\ugii</code></div>
<div class="line number9 index8 alt2"><code class="jscript plain">path = %ugii%;%path%</code></div>
<div class="line number10 index9 alt1"><code class="jscript plain">start ugraf -nx</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>start_cadlab_nx2206.bat 可以利用 D: 安裝的 NX2206 啟動.</p>
<div>
<div class="syntaxhighlighter jscript" id="highlighter_73176">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="jscript plain">@echo off</code></div>
<div class="line number2 index1 alt1"><code class="jscript plain">set Disk=z</code></div>
<div class="line number3 index2 alt2"><code class="jscript plain">subst %Disk%: </code><code class="jscript string">"NX1872"</code></div>
<div class="line number4 index3 alt1"><code class="jscript plain">%Disk%:</code></div>
<div class="line number5 index4 alt2"><code class="jscript plain">set SPLM_LICENSE_SERVER=28000@NX_license_server_IP</code></div>
<div class="line number6 index5 alt1"><code class="jscript plain">set UGII_LANG=english</code></div>
<div class="line number7 index6 alt2"><code class="jscript plain">set UGS_LICENSE_BUNDLE=ACD11,ACD10</code></div>
<div class="line number8 index7 alt1"><code class="jscript plain">set ugii=D:\Program Files\Siemens\2206\ugii</code></div>
<div class="line number9 index8 alt2"><code class="jscript plain">path = %ugii%;%path%</code></div>
<div class="line number10 index9 alt1"><code class="jscript plain">start ugraf -nx</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>start_cadlab_nx12.bat 可以利用 D: 安裝的 NX12 啟動.</p>
<div>
<div class="syntaxhighlighter jscript" id="highlighter_331762">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="jscript plain">@echo off</code></div>
<div class="line number2 index1 alt1"><code class="jscript plain">set Disk=z</code></div>
<div class="line number3 index2 alt2"><code class="jscript plain">subst %Disk%: </code><code class="jscript string">"NX1872"</code></div>
<div class="line number4 index3 alt1"><code class="jscript plain">%Disk%:</code></div>
<div class="line number5 index4 alt2"><code class="jscript plain">set SPLM_LICENSE_SERVER=28000@NX_license_server_IP</code></div>
<div class="line number6 index5 alt1"><code class="jscript plain">set UGII_LANG=english</code></div>
<div class="line number7 index6 alt2"><code class="jscript plain">set UGS_LICENSE_BUNDLE=ACD11,ACD10</code></div>
<div class="line number8 index7 alt1"><code class="jscript plain">set ugii=</code><code class="jscript string">"D:\Program Files\Siemens\NX 12.0\ugii"</code></div>
<div class="line number9 index8 alt2"><code class="jscript plain">path = %ugii%;%path%</code></div>
<div class="line number10 index9 alt1"><code class="jscript plain">start ugraf -nx</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div><h3>cd2024 2b 3 如何設定 Github 帳號的雙重認證</h3>
<p>影片字幕</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/pPD1wOjpyfQ?si=U9TR2NMuhe_u9Ys1" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>影片敘述 :</p>
<p>因為github政策更改，所以所有用戶必須在時限內雙重認證，不然將會被github鎖定mail，所以本影片利用綁定智慧手環、手機下載 Authy 的免費 Apps ，幫變綁定與認證github驗證碼與成功雙重驗證等等</p>
<p></p>
<p>cd2024_2b_3_如何設定 Github 帳號的雙重認證.txt 逐字稿 txt 丟至 downloads</p>
<p>好所以雙重認證啊其實就是<br/>你在電腦上要登入的話<br/>比方說我這個字所以能夠登入啊<br/>我是已經通過他的雙重認證<br/>查驗<br/>所以你要設定的話你 你必須要登入到github<br/>我就第一次當然不可能雙重認證<br/>然後你進來就要趕快跑到這個帳號 帳號的設定區<br/>然後找到他的這個密碼跟認證這一個<br/>項目<br/>passwords這個是密碼<br/>authentication是認證<br/>然後你給他點進來<br/>然後他這個內建底下這邊啊他這個應該是沒有啟動了<br/>雙重<br/>雙重認證<br/>然後你給他啟動的話像我是綁定<br/>我這個是綁定到<br/>我的手錶<br/>假如你有智慧手錶跟手機可以連的話<br/>你就可以安裝這個<br/>只有這個是免費的<br/>Ok只有這個是免費<br/>那手機也可以安裝這個叫你要的話<br/>你手機就<br/>搜尋一下這個authy app<br/>然後你手機也可以用<br/>OK<br/>好那只有這一個套件是免費可以<br/>把那個密碼因為你在像我在Apple Watch我是可以把手機上的這一個apps<br/>安裝在手錶上<br/>所以你就只要帶手錶不需要帶手機<br/>就這樣<br/>好所以你聽到這裡面啦我們想要讀一下<br/>因為他這邊即便是簡體中文啊<br/>他還是英文啊所以你看<br/>他這邊怎麼講<br/>他說從<br/>因為我們上學期就知道了嘛<br/>從2023的3月<br/>到年底<br/>逐漸的開始強制<br/>所有用戶<br/>都必須要用雙重認證<br/>所以你只要有以前舊的帳號一定記得要趕快設因為他不知道什麼時候<br/>OK<br/>他這裡啊給你45天啊<br/>我給你45天因為你建帳號之後45天內你一定要趕緊把它弄起來沒有的話就進不去了<br/>那舊帳號我就不曉得他的他的policy怎樣然後你的帳號因為沒有雙重認證被鎖定<br/>你只好重建<br/>重建的部分不能用原來的那個email就比較麻煩<br/>因為他每一個email只能<br/>在這個github他們上登記一次<br/>然後那他的使用就是除了連到這邊之外<br/>他其實是利用<br/>利用這一個二維條碼所以你只要看他下面的說明啊<br/>有沒有<br/>這個是我們剛講的帳號下的設定<br/>然後選擇到密碼跟認證<br/>好然後在這個區域在這個區域啊<br/>你點選說我要啟用<br/>雙重認證<br/>英文的話是enable<br/>那你假如<br/>知道這個是啟用之後啊<br/>他這邊就會出現一個二維條碼<br/>所以這個二維條碼你就必須要用你的<br/>手機<br/>打開你的mobile意思就是給他的mobile裡面他會有一個<br/>相機的選項<br/>然後拍這個二維條碼<br/>然後他<br/>基本上他就會秀出啊<br/>你可以輸入到github的<br/>數字<br/>就這樣<br/>然後一旦設好之後很重要的一點啊<br/>好像這個就是二維條碼然後你說那麼完之後很重要的一點啊你一<br/>要下載這一個<br/>回覆的這個字串<br/>他叫做recovery Codes<br/>萬一你的手機壞掉<br/>或者是你的手機不見<br/>你沒辦法用啊因為這個時候你就要靠這個回覆嗎來<br/>取回帳號<br/>就這樣啊這個回覆嗎你要嘛把它存在隨身碟要嗎把它同時送到你<br/>遠端的<br/>比較常用的電子郵箱<br/>那保證說<br/>最後<br/>萬一相關的設定都在手錶或手機上的不見了你還<br/>可以拿這一串是一堆一堆這個編碼的數字加上<br/>來取回你的這個帳號<br/>而且你一定要<br/>把它下載否則它是上面會有一個選項他說你存了之後啊你說我已經存<br/>我的回覆碼<br/>然後這個時候你才可以把兩段因為他很害怕萬一你的這一個兩段式<br/>認證出問題的話這個帳號形同是沒有任何人可以登入<br/>那假如你是付費的話你還可以請他幫你處理<br/>我要去打電話也許要從你的這個帳號因為你付費的他有認證碼<br/>信用卡或者用什麼樣式用什麼方式來付錢對吧你說我就是<br/>也許還可以拿回來但是因為我們是免費的<br/>免費帳號是沒有這個金流的部分所以只靠這一個回覆碼來取回你的認證<br/>好像我們這個影片就可以把它存起來<br/>然後是在這裡</p><h3>cd2024_2b_2_如何從 Replit Account 設定 Connect 連結到 Github</h3>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/3VdJEzJY-oE?si=ISL1atN75CkkaQgT" title="YouTube video player" width="560"></iframe></p>
<p>影片敘述 :</p>
<p>本次上課內容與github和replit息息相關，如果需要使用replit協同、同步更改github上的內容，就需要利用本影片的步驟，進行github account 上的設定與 replit 去做連結，使其可以相互信任。</p>
<p>cd2024_2b_2_如何從 Replit Account 設定 Connect 連結到 Github.txt 逐字稿 txt 丟至downloads</p>
<p>開始啊<br/>我們就連到我登入這裡你必須要登入到<br/>你必須登入到github<br/>然後同時啊<br/>登入到replit<br/>所以你必須要啊先把兩邊把它連起來<br/>意思就是說你要跑到你的<br/>replit的這個帳號下<br/>這是你replit的帳號<br/>你要點選他的account<br/>這是你帳號下面的這個帳號<br/>設定<br/>所以我點選這個的話我目前啊<br/>在底下這裡其實我已經有連結了<br/>兩邊能不能信任<br/>靠的就是這個連線的服務<br/>就是這個<br/>假如你已經出現disconnect<br/>表示這一個你已經做過<br/>假如你是出現connect表示還沒有連結<br/>最假如你本身的github是對應到connect<br/>你就給他點下去<br/>他會在你的電腦安裝一個應用程式<br/>Ok表示你授權<br/>可以兩邊可以互通<br/>互通之後的帳號就會長這樣<br/>你想要連結到帳號下的設定<br/>OK<br/>那他底下這邊就有一個應用程式<br/>這個是帳號<br/>在整合區<br/>Integration是整合的意思<br/>他底下他就有一個Applications<br/>去找你兩邊的這個信任是成功的<br/>你點選這個Applications他就會出現這個<br/>所以你假如有Application下面有replit<br/>表示你的github跟replit兩邊是信任<br/>意思就說你待會假如吧<br/>倉儲啊輸入到你的replit<br/>改版完是可以推回來<br/>這個就是我們要的<br/>我說這個是第一部所以我們確定有這個之後啊<br/>我們待會再來做inport的動作所以我們這個小影片我們先把它<br/>拍下來ok所以我們小影片這一小段喔<br/>我們先拿</p><h3>cd2024 2b 4 說明如何將倉儲 import 至 Replit 改版後推回 github</h3>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/F1_YDWsGvwo?si=ETYzlygghWgq5wen" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>影片敘述 : </p>
<p>在本影片中，老師講述了如何在replit創造github的專案，詳細的講述每個指令的功用與意思，並敘述基本的指令與如何進行維護github的倉儲，說明如何將倉儲 import 至 Replit 改版後推回 github。</p>
<p></p>
<p>cd2024 2b 4 說明如何將倉儲 import 至 Replit 改版後推回.txt  逐字稿上傳至 downloads</p>
<p>逐字稿 </p>
<p>所以我們這邊必須要先知道就是說我們用的這一個<br/>tempreat就每一個人現在其實內容都一樣<br/>但是你必須要<br/>想辦法在replit上面<br/>來編輯因為你在近端的話也可以我們就要設key<br/>那個我們後面才會提到因為你在協同的時候<br/>不見得所有人都能上網<br/>OK<br/>意思就說他可能某一個時段他根本不用上網<br/>我還是可以做<br/>把我提交了幾次之後<br/>等到我能上網的時候我再把他推送<br/>那你中間的改版啊可能8個人到時候你是需要合併了<br/>那個合併或者解決衝突啊其實才是協同的一個問題<br/>那你之前上電腦輔助設計你應該有碰到<br/>只是說在協同的時候啊<br/>應該解決衝突的這個機會更多所以你必須要對這個系統有一點<br/>有更多的了解<br/>比方說所謂動態網站的資料<br/>Ok 其實是位在<br/>Config<br/>Content HTM這個檔案<br/>轉換完成的靜態資料是位在content的這個目錄下<br/>這是第一個要知道了<br/>那之前<br/>其實我們用蠻久了齁<br/>另外這個網站的原始檔是位在markdown<br/>所使用的網誌系統我們用的用python寫的這個早就在裡面<br/>只是我們之前都沒有<br/>特別把他提出來也沒有要求你要寫我那就這學期沒有考試喔<br/>重要的是每個禮拜你都要有進度註記<br/>那這個就<br/>其實跟考試是一樣啊<br/>看你東西有沒有做出來你8個組員反正有沒有貢獻其實你的<br/>這個組員都很清楚啦<br/>所以用的這個轉換完成的這個網頁就位在blog<br/>就好像我們現在看的<br/>我們看的這個網址<br/>這個是我們倉儲的網址<br/>對應的網站網址<br/>然後你只要打blog他就會出現<br/>底下從indesk假如我們把這個<br/>直接打到這個blog<br/>他就會有一個<br/>Indesk的網頁來派送所以我們打到這邊這個就是你的<br/>網址<br/>也就是內容管理的網址再加上blog我們打看看<br/>喔他就跑到這個外面這一頁<br/>那我們現在就是要教你怎麼去設定他<br/>讓你可以有這樣的一個連結<br/>這個時候還是一樣回到我們的<br/>這個倉儲裡面<br/>所以你現在假如正在看你的這個markdown<br/>基本上還沒有inport進來嗎<br/>Ok所以這裡變成說好那我們已經有設定兩邊連線我們這邊要<br/>怎麼把他弄進去<br/>我們現在<br/>已經登入到replit<br/>Ok而且我們要確定<br/>這個連線的部分啦已經完成<br/>意思是說你<br/>兩邊的服務<br/>待會我們inport到replit改版完是推的回去的<br/>Ok我們先來看<br/>所以我們就要從create可以一個專案<br/>現在你應該是已經登入到replit<br/>好啦當然剛剛我們一樣也是登入到github<br/>所以這個時候我要建立一個repl<br/>好謝你點這個create repl<br/>我們是要<br/>從github<br/>所以我們選的是這個<br/>我們並不是一個完全空的我們選的是inport from github你點選這個<br/>馬上會出現你剛剛建的<br/>他馬上<br/>會出現你剛才建的<br/>帳號下的這一個<br/>CD2024<br/>有沒有看到<br/>好所以你就直接在這個打勾說我要<br/>導入的就是這一個倉儲<br/>那這個倉儲因為是用python寫的所以你語言這個部分<br/>你必須要把內建的Note點js<br/>要改<br/>改成python<br/>Ok然後再<br/>他的表單這邊點選一下<br/>最確認說你是inport from github<br/>然後語言也選了正確的python之後<br/>你在按這一個inport from github<br/>我要再這樣的一個條件下導進來<br/>好像我就按inport他就開始幫你轉了<br/>我們必須要在這個平台上面<br/>安裝模組<br/>他並不知道我們要跑的套件是什麼<br/>欸我們現在要跑的是網際內容管理嗎<br/>那他需要<br/>對應的這一個倉儲<br/>最其實要的是這一串<br/>那怎麼辦因為我們現在就按到<br/>在這裡啊我們我們要打的是這個先看看能不能夠用複製的<br/>所以你第一步就在readme<br/>.md這邊啊你看看能不能複製<br/>看看能不能複製<br/>可能真的要打喔當然網頁的部分應該是可以複製<br/>可是要執行啊我們必須要在這個shell<br/>命令區<br/>console<br/>Output就是你執行的部分然後這個shell是要執行命令<br/>所以我們第一個就是要先把這個檔案啦設定可以執行<br/>那我們先想辦法把這個chmod u+x init_replit<br/>底線那其實他那個init_replit是一個我們已經安排在裡面的檔案<br/>好那我們看能不能把它貼上<br/>好他會問你說到底<br/>有沒有<br/>授權給這個網頁<br/>你可以把複製的部分檔案貼上來我說可以<br/>他就貼上來他至於這個指令是什麼意思<br/>這個指令是要跟我要改變啊檔案的屬性<br/>Ok空一格<br/>後面就是他的選項<br/>U代表的是user<br/>x代表是執行<br/>所以使用者要讓他可以加上執行的屬性<br/>針對的是哪一個檔案呢針對的是這個檔案<br/>所以這個指令一執行這個檔案原來不能執行馬上就可以使用者馬上可以執行<br/>不知道裡面有東西改變了他會重新載入這個<br/>shell的部分<br/>好然後接著<br/>就是執行他的執行一定要有<br/>現在所在的目錄<br/>下面的這個你怎麼沒有打前面的這個點加斜線他不會他不知道你要執行哪一個檔案<br/>好這樣的話他就會幫你安裝模組<br/>Ok意思就是說我們要按這個run之前你就必須要<br/>先根據<br/>這readme.md下的檔案的這兩個步驟<br/>而且要在shell面執行<br/>好那一段<br/>他這裡全部執行完的話<br/>他就會回復到<br/>回復到他的這個回應<br/>那這個回應的部分我們假如要把上面的已經執行完的訊息啊<br/>要把它清除的話我就打clear<br/>clear在Linux的一個指令<br/>清除畫面的意思<br/>Windows下面cls是一樣的<br/>我因為我們家有在Windows有沒有<br/>我們有時候在這裡面我們有一些畫面<br/>假如在Windows你要把它清除是CLS<br/>Clear scream<br/>是Windows dos的指令<br/>因為是Windows dos先出來<br/>不好意思用同樣了<br/>cls<br/>一樣清除畫面的意思<br/>我說剛剛我們打的是CLS<br/>這個是在命令列<br/>假如畫面就叫CLS然後在linux的話<br/>他是叫clear<br/>因為他有很多視窗你要在這個視窗上你滑鼠就要點這邊他這裡要變黑的<br/>你現在在這裡<br/>你案enter是作用在這裡<br/>是作用在這個小頁面上<br/>那我們為了要執行他<br/>你必須要滑水點在這個他才知道所以這個會變黑的<br/>好那一案enter他就會清除畫面<br/>安裝的所需模組之後你的run應該就有作用<br/>撒花之後他就開始<br/>在你剛才安裝的這些模組的平台<br/>環境中來執行執行哪一個<br/>其實他是執行main.py<br/>那我怎麼會知道耶<br/>好那這邊有一個設定<br/>你假如吧<br/>隱藏的檔案秀出來<br/>我再一次喔<br/>在這個檔案區有沒有那個檔案區有時候會不見喔<br/>有時候會不見<br/>給你按這個他就跑出來<br/>這裡這個<br/>好那這個檔案區的<br/>顯示這邊啊有一些檔案是隱藏起來<br/>這個是專門看要不要秀出這個<br/>檔案的顯示<br/>有一些檔案他是隱藏起來<br/>假如你點選這個顯示隱藏檔<br/>就是顯示碼<br/>隱藏的隱藏檔案一點他的話<br/>底下有兩個重要的檔案<br/>這兩個設定檔config file就是設定檔<br/>其中很重要的是這個檔<br/>點replit<br/>好那意思就說你按run到你他做了什麼你點他就知道了其實你點run<br/>你點run啊其實他就是呼叫python3 main.py<br/>就啟動那main.py是什麼<br/>main.py其實是一堆<br/>執行程式所以我們把main.py帶出來這裡面<br/>因為他這裡面會牽涉到兩層<br/>兩層的啟動這個<br/>是內容管理裡面<br/>那我們必須要知道說原來他就是透過<br/>python3來執行就好了<br/>這是我們編寫的網際內容管理系統<br/>那一旦你<br/>啟動之後<br/>他的這個webview<br/>我們可以把他拉到同一個畫面<br/>待會我們要編輯檔案會比較有比較大的範圍<br/>正把這些小頁面都把它拉到一起<br/>要待會我們其實是要<br/>抓出檔案在這裡來設定<br/>好那我們要設定的部分假如你想要看看我們之前用過的<br/>編輯<br/>你就可以直接用滑鼠右鍵把這個login在分頁中把它打開來<br/>我是這樣意思就說<br/>他就會給你一個網址可是這個網址對你來講<br/>沒有人可以知道你現在這個網址是什麼<br/>這表示說你講的是一個人使用的話<br/>你不需要去<br/>把設定的這個密碼<br/>用sercret代替不用你就直接用admin就好了<br/>這個小寫的admin<br/>就是跟近端編輯是一樣的<br/>因為這一串就是保護你<br/>admin admin小寫這個就是管理者的密碼<br/>被你admin你就直接進去啊<br/>那你要讓其他的人來分享<br/>分享這個編輯<br/>admin其實也可以<br/>但是萬一你這個<br/>連結的部分表說你現在<br/>把這一串連結<br/>劃到不同了<br/>瀏覽器上面<br/>那我這邊<br/>我有登登入所以不行你可以試試看<br/>這一串連結只要知道的人就可以用admin進來編輯<br/>簡單講就這樣<br/>好所以你應該馬上可以<br/>編輯這一串<br/>你的網頁在哪裡啊<br/>從剛剛設的就知道啦<br/>我們剛才是在這個帳號下的倉儲對吧<br/>然後我們倉儲裡面有建一個CD2024<br/>所以這個是你的倉儲好了把它copy下來<br/>那我們剛才編輯的這裡面我們填入倉儲的位置<br/>網頁我們假如自己知道的話自己拼出來假如你直接想要從裡面copy<br/>也可以<br/>進到setting<br/>然後進到pages<br/>這個就是你的倉儲<br/>是你的網頁<br/>好這個把他copy過來<br/>copy一樣<br/>把它放到你的網頁去<br/>可是問題來啦<br/>網誌跟簡報呢你必須要想辦法在這個連結後面加上blog<br/>加上review<br/>可是你假如直接用剛才copy的那個網址<br/>你把它貼上來之後<br/>你在打blog<br/>那這樣沒有辦法變成<br/>的連結對不對<br/>那這裡要怎麼辦<br/>我想要有前面這一個網頁的純字串我不要你<br/>附加html的資料<br/>那怎麼辦<br/>我們就可以回來回來<br/>然後把這個刪掉<br/>問題是我們這個上面複製的部分要漂白<br/>那通常漂白可以跑到這裡<br/>這個區域因為這個是純網頁所以你把它貼上來<br/>複製<br/>html連結就不見<br/>這個時候你不要用OK啦因為這裡面其實是讓我們放<br/>程式碼的地方只是我們要利用這個網頁的表單<br/>把附加的超文件刪掉這個時候你再貼回來他就是乾淨的字串<br/>我說這個這個做法一定要把它學起來當然你也可以回到<br/>Windows的編輯器來漂白只拿到他的這個字串所這個時候啊你想要<br/>畫面直接在打blog在案enter<br/>然後他就ok<br/>不然的話你還要進入這個超文件編輯在那邊搞半天<br/>所以這裡面變成說通常這個是我的做法<br/>所以是這樣的話你的<br/>簡報就是純文字<br/>再加上review<br/>這樣的話你就可以把你對應的about裡面的這些資料都把它填好<br/>OK<br/>那至於底下這個跟我們不相干的我們就可以把它刪掉<br/>然後再把他按safe<br/>至於我們上面這個有關Cmsimde的說明我們把它寫在第二頁<br/>我不要說這個SMAP就是<br/>你按的話他會按到幾次列出目前的所有<br/>因為我們現在都是一階的嗎所以你可以選他<br/>他就會show<br/>這個部分<br/>我們要改config說你現在想要改config<br/>要改這個頁面<br/>標題<br/>你就按config<br/>Ok然後我們這邊我們是<br/>所以我自己去<br/>是我的帳號<br/>cd2024<br/>send<br/>這個時候我要把現在這個版本<br/>我要把它送到我真正的github page<br/>叫他背景上<br/>我就必須要先<br/>按一下convert<br/>我要他轉成靜態<br/>這個時候再回來<br/>我們現在需要git<br/>git的工具在哪裡跑到底下可以來找<br/>你按一下看一下這個裡面他就有git底下他就有git這個小頁<br/>所以他已經知道你從這裡就可以看出我現在有改版的部分就在這裡<br/>我說這個也是replit不斷地在進化對不對好所以我們到這邊來講我們就<br/>我們已經修改<br/>網站標題<br/>而且<br/>而且怎麼樣在about<br/>頁面<br/>填入對應的所以我們剛剛做什麼<br/>我們填入在about頁面填入<br/>正確的<br/>倉儲<br/>網誌<br/>網站連結的這個是每個人都不一樣因為你的帳號不一樣啊<br/>你的github帳號會對應<br/>不一樣的<br/>倉儲的連結網製的連結網站的連結<br/>我們剛剛就做了這些改變這個時候我們把它<br/>讓他提交<br/>提交之後他這邊就會出現這樣<br/>你去看喔<br/>這個就是遠端remo就是遠端<br/>所以他會說update跟遠端同步的就是一個提交<br/>底下我們剛剛提交的那個部分啊<br/>還沒有push<br/>還沒有推到遠端<br/>那我們就推就好了嗎<br/>因為權限剛剛已經建立了嘛所推的時候他就出現這個<br/>你要確認confirm<br/>comfirm是確認<br/>確認這一個階段所完成的改版<br/>要不要推上去假如不要就案deny<br/>假如要<br/>後面這個確認確認<br/>他就會推上去因為權限剛才考那個時候已經建立<br/>好所以表示說這個已經上來<br/>表示說我們現在見的這個<br/>已經跑到<br/>目前在轉檔<br/>這個就是剛剛提交的內容<br/>就這樣<br/>待會我們的遠端網站<br/>就會跟動態網站的內容同步<br/>好說我們先把這個影片我們先把它存下<br/>待會我們再來設定完<br/>網誌的部分</p>
<p></p>
