<h1>About</h1>
<p>網頁: <span class="text-bold"><a class="Link--inTextBlock" href="https://41023124.github.io/cd2024/">https://41023124.github.io/cd2024/</a></span></p>
<p>網誌: <a href="https://41023124.github.io/cd2024/blog">https://41023124.github.io/cd2024/blog</a></p>
<p>簡報: <a href="https://41023124.github.io/cd2024/reveal">https://41023124.github.io/cd2024/reveal</a></p>
<p>倉儲: <a href="https://github.com/41023124/cd2024">https://github.com/41023124/cd2024</a></p>
<p></p>
<h1>cmsimde</h1>
<p><span style="background-color: #ccffcc;">SMap</span> - SiteMap - 依照階次列出網站的所有頁面.</p>
<p><span style="background-color: #ccffcc;">EditA</span> - Edit All page - 將所有頁面放入編輯模式中, 主要用來處理頁面搬遷, 刪除或決定衝突頁面內容版本.</p>
<p><span style="background-color: #ccffcc;">Edit</span> - Edit page - 先選擇要編輯的單一頁面後, 再點選 Edit, 即可進入單一頁面的編輯模式.</p>
<p><span style="background-color: #ccffcc;">Config</span> - Configure Site - 編輯頁面標題與管理者密碼.</p>
<p><span style="background-color: #ccffcc;">Search</span> - 動態頁面內容的關鍵字搜尋.</p>
<p><span style="background-color: #ccffcc;">IUpload</span> - Image file Upload - 圖檔的上傳功能, 可以上傳 jpg, png 與 gif 檔案, 其中若在手機上傳圖檔, 系統會自動將圖片檔案縮小為 800x800 大小.</p>
<p><span style="background-color: #ccffcc;">IList</span> - Image file List - 列出可以直接在頁面編輯模式中引用的圖片檔案.</p>
<p><span style="background-color: #ccffcc;">FUpload</span> - File Upload - 一般檔案的上傳功能, 目前可以上傳的檔案副檔名包括 'jpg', 'png', 'gif', '7z', 'pdf', 'zip', 'ttt', 'stl', 'txt', 'html', 'mp4' 等, 使用者可以自行修改.</p>
<p><span style="background-color: #ccffcc;">FList</span> - File List - 列出可以直接在頁面編輯模式中引用的上傳檔案.</p>
<p><span style="background-color: #ccffcc;">Logout</span> - 登出頁面編輯模式.</p>
<p><span style="background-color: #ccffcc;">Convert</span> - 將動態網站中位於 config/content.htm 檔案, 透過分頁設定轉為 content 目錄中的靜態網頁.</p>
<p><span style="background-color: #ccffcc;">acp</span> - git add, git commit 與 git push, 通常只有在 localhost 或自架主機上利用網頁表單協助將倉儲改版內容推向 Github 倉儲.</p>
<p><span style="background-color: #ccffcc;">SStatic</span> - Start Static Site - 利用 Python 啟動網站伺服功能, 可以讓使用者檢查轉檔後的靜態網站內容.</p>
<p><span style="background-color: #ccffcc;">RStatic</span> - Replit Static Site URL - 僅用於 Replit 模式, 當使用者按下 SStatic 後, 可以按下 RStatic 進入當下尚未推向 Github Pages 的靜態網站.</p>
<p><span style="background-color: #ccffcc;">80</span> - 由 init.py 中 static_port 所決定的連結字串, 一般不使用 80, 只有在 Replit 中為了與動態網站共用 port, 才特別設為 80.</p>
<p></p>
<h1>Replit</h1>
<p><a href="https://replit.com">https://replit.com</a></p>
<p>利用 init_replit 指令安裝所需 Python 模組<br/><br/>chmod u+x init_replit<br/><br/>./init_replit</p>
<p dir="auto">On Replit:</p>
<p dir="auto">.replit: python3 main.py</p>
<p dir="auto">chmod u+x cms init_replit</p>
<p dir="auto">./init_replit</p>
<p dir="auto" style="padding-left: 30px;">for cmsimde_site (not needed): git submodule update --init --recursive</p>
<p dir="auto" style="padding-left: 30px;">for cmsimde: pip install flask flask_cors bs4 lxml pelican markdown gevent</p>
<p dir="auto">password generator: <a href="https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py">https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py</a> </p>
<p dir="auto"></p>
<p dir="auto">for IPv6 only Ubuntu:<br/><br/>.ssh 目錄中的 config, 將 SSH session 名稱設為 github.com:<br/><br/>Host github.com<br/>User git<br/>Hostname github.com<br/>ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p<br/><br/>for Replit:<br/><br/>.ssh 目錄中的 config, 將 SSH session 名稱設為 github.com:<br/><br/>Host github.com<br/>User git<br/>Hostname github.co<br/>#since Replit works for IPv4, therefore no ProxyCommand setting needed<br/>#ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p</p>
<p></p>
<p></p>
<h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p></p>
<p></p>
<p></p>
<p></p>
<h1>每周進度報告</h1>
<h2>w1</h2>
<p>第一周進度</p>
<p>依照mde.tw/cd2024中的 Topics / Video中的影片</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/ETTxsR2xBJ1Mg1Ikuz0lscEB5heQCnNRxTnzD1OPTkDPEA?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=bPQk4F">建立個人課程 cd2024 倉儲與網站的操作影片</a> (7:17)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EdBPsKV-ktZOtvo4InwdSoEBAM4B239cijCPMAb1qAUAxg?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=AUcZgW">設定 Replit 與 Github 應用授權的說明影片</a> (2:44)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EQkTC4PryY5KrohZdneAygIB1d2FCzwpl2tn8cdyG-Q8Vg?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=L28Ued">說明如何設定 Github 雙重認證</a> (6:28)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EQIDGG3E8ElOjzeZrCESQzABRJ2tKiSw1T59WDa3x8FU-w?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=E6LSw5">說明如何利用 Replit 對 cd2024 改版</a> (20:16)</p>
<p>照著影片中的步驟創建個人的cd2024倉儲與網站與如何與Replit連結Github，並更新上推至倉儲去做更新</p>
<p></p>
<p>設定網誌</p>
<p>利用 [OBS] 加上廣播系統錄製的:<span> </span><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EZMAhRju-rdNrUxk9plOglIBMK2WcO3iL1iK11xipW48Mw?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=jogiPc">如何設定個人倉儲中的 Pelican 網誌</a></p>
<p></p>
<h2>w2</h2>
<p>第二周進度</p>
<p>協同產品設計實習的第二週, 主要利用 Github Classroom 進行分組, 並跟著老師操作與使用Codespaces、近端與Replit進行倉儲維護，並跟著下方所錄的教學影片進行操作。</p>
<p></p>
<p></p>
<p></p>
<p>利用 Codespaces 維護倉儲與網站</p>
<p>說明<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EX2nKmkIMX9EtahHjCFmVg4Bp_6wwEvoKsos6LbRHFl6NA?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=qD4FMu">如何利用 Github Codespaces 維護網站內容</a></p>
<p></p>
<p>在近端執行動態網站</p>
<p>說明<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EfEB1UUQFttEu-jLYpAaflsB85I01JJFdI_HectY6T5rrw?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=eYLF26">如何利用近端可攜系統維護分組網站</a></p>
<p></p>
<p>說明<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EfhTxuf_qX5NqlZBu3n764wBy1d1un0pOZaItSW2Lao2nw?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=QRghBy">甲班第一組組長如何建立 midag1 Team</a>, 並利用 Codespaces 維護 2a-midag1 分組倉儲</p>
<p>說明如何<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EQm-H5Jrv-lMqpKgjWeXhxsBTEZudKJx1M_NQJQumPZttA?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=6Ib0iC">利用 Replit 管理從 Classroom 取得的分組倉儲</a></p>
<p>待各分組的期中報告 Team 與倉儲全部建立就緒後, 則甲班學員後續可配合期末作業名稱 2a2, 由甲班各組組長建立 Team finalag1, finalag2 ....等.</p>
<p></p>
<p>利用 Github Classroom 指定分組倉儲</p>
<p>由於各分組網站從 Github Classroom 執行配置, 因此該倉儲位於 mdecd2024 帳號下, 雖然各組組員具備對此分組倉儲改版的權限, 但是若將分組倉儲 import 到 Replit, 因為其倉儲擁有者為 mdecd2024, 因此無法從 Replit accoount 項下進行授權, 但是可以利用 ssh-keygen 建立 .ssh 目錄下的 id_rsa 與 id_rsa.pub, 之後除了將公鑰送到 Github 之外, 還需要在 .ssh 目錄中建立 config, 且將倉儲 .git/config 中的 https 協定改為 SSH.</p>
<p>根據上述流程, 可以在 Replit 中以 SSH 模式取得對 Github 帳號下特定倉儲的改版全縣, 只不過 Replit 的免費帳號環境會不定時刪除 /home/runner/.ssh 目錄中的授權資料, 因此若要使用 Replit 維護從 Github Classroom 取得授權的分組倉儲, 必須使用程式方法配置 .ssh 中的 id_rsa 與 config 檔案.</p>
<p>期中分組作業名稱甲班為 2a, 其中甲班第一組組長必須建立名稱為 midag1 的 Team, 讓第一組的組員員加入. 其餘各組的期中報告 Team 名稱則分別為 midag2, midag3 ....</p>
<p>根據上述規劃, 甲班第一分組的期中協同倉儲將位於:<span> </span><a href="https://github.com/mdecd2024/2a-midag1">https://github.com/mdecd2024/2a-midag1</a>, 第一組的期中報告網站將位於:<span> </span><a href="https://mdecd2024.github.io/2a-midag1">https://mdecd2024.github.io/2a-midag1</a>.</p>
<p></p>
<p></p>
<p></p>
<p></p>
<h2>w3</h2>
<p>W3 任務交付與w3-2中的教學影片進行操作</p>
<p>cd2024 w3 任務</p>
<p> 1. 請各組將組員的個人課程倉儲 cd2024 設為分組倉儲 2a-midag1 的子模組, 且以各組員的學號作為子模組的名稱</p>
<p> 2. 請各組員將負責分工處理的 <a href="https://webthesis.biblio.polito.it/16429/1/tesi.pdf" rel="noreferrer noopener" target="_blank" title="https://webthesis.biblio.polito.it/16429/1/tesi.pdf">https://webthesis.biblio.polito.it/16429/1/tesi.pdf</a> 中英文並列資料 (LaTeX) 放在個人的倉儲網站, 最後在分組倉儲中整合建立出各組的期中報告 pdf 檔案</p>
<p></p>
<h3>w3-2</h3>
<p></p>
<p>本周為第三周，進度是照著網誌中的影片將組員的個人倉儲設為分組倉儲子模組與有關 LaTeX 轉 pdf 在 Windows 環境, 說明如何利用 LaTeX 協同建立分組報告。</p>
<p></p>
<p>2024 Spring 協同產品設計實習的第三週, 主要說明如何善用 Github Codespaces 與 Gitpod, 以及將組員倉儲設為分組倉儲的子模組, 同時導入 LaTeX 轉 pdf 機制, 啟動期中分組報告的製作.</p>
<p>列出期中分組倉儲與網站</p>
<p><a href="https://mde.tw/cd2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/8ba6fa28317bc7a784d8350e7bc33580/raw/4da5bed66516f7808811839885aedd946e20f17b/list_cd2024_midterm_url.py">cd2024 期中分組倉儲與網站</a></p>
<p></p>
<div>
<div class="syntaxhighlighter python" id="highlighter_627208">
<p>期中協同分組報告</p>
</div>
</div>
<p>請參考<span> </span><a href="https://github.com/mdecd2024/test-ag1">https://github.com/mdecd2024/test-ag1</a><span> </span>中的 latex 目錄與 downloads 目錄中的<span> </span><a href="https://github.com/mdecd2024/test-ag1/blob/main/downloads/report_github.txt">https://github.com/mdecd2024/test-ag1/blob/main/downloads/report_github.txt</a></p>
<p>並根據下列教學範例:</p>
<p>說明<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/ETNuIGNcCd1Lvfeuy1qMnCYBrr8Nhv4OrSVQ2Xfv2o7gdQ?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=8b3kMk">如何將 41123130 的個人倉儲設為 2a-midag2 分組倉儲的子模組</a></p>
<p>說明<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EZbnYCWfEylAmXhpOqXWgZUBMxerlNYRgQsBBjZAQ90lmg?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=8nGXOz">如何將組員的個人倉儲納入分組倉儲成為子模組</a></p>
<p>說明<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EUlbUzMAyBFHrHX7bLPRKzsB3L-T-D413BPuH6pMSEZmjg?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;e=HjIQab">如何在 Replit 維護分組倉儲</a></p>
<p></p>
<h2>w4</h2>
<p>本周為協同產品設計實習的第四週, 本周進度為將先前<span>教學影片分組整理上字幕並且將自己做得給自評</span></p>
<p></p>
<p></p>
<p>w4 2a 分組任務</p>
<p></p>
<p>請各組自行搜尋前面已經發布的教學影片, 分別</p>
<ul>
<li>在影片上填上字幕, 另行上傳到可以嵌入到各分組的網站上</li>
<li>從影片字幕中整理出逐字稿, 放在影片下方, 以 .txt 連結安排</li>
<li>並在各嵌入的教學影片下方, 以摘要方式說明該影片的教學重點</li>
</ul>
<p></p>
<p></p>
<div>
<div class="syntaxhighlighter jscript" id="highlighter_331762"></div>
</div>
<h3>cd2024 2b 3 如何設定 Github 帳號的雙重認證</h3>
<p>影片字幕</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/pPD1wOjpyfQ?si=U9TR2NMuhe_u9Ys1" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>影片敘述 :</p>
<p>因為github政策更改，所以所有用戶必須在時限內雙重認證，不然將會被github鎖定mail，所以本影片利用綁定智慧手環、手機下載 Authy 的免費 Apps ，幫變綁定與認證github驗證碼與成功雙重驗證等等</p>
<p></p>
<p>cd2024_2b_3_如何設定 Github 帳號的雙重認證.txt 逐字稿 txt 丟至 downloads</p>
<p>好所以雙重認證啊其實就是<br/>你在電腦上要登入的話<br/>比方說我這個字所以能夠登入啊<br/>我是已經通過他的雙重認證<br/>查驗<br/>所以你要設定的話你 你必須要登入到github<br/>我就第一次當然不可能雙重認證<br/>然後你進來就要趕快跑到這個帳號 帳號的設定區<br/>然後找到他的這個密碼跟認證這一個<br/>項目<br/>passwords這個是密碼<br/>authentication是認證<br/>然後你給他點進來<br/>然後他這個內建底下這邊啊他這個應該是沒有啟動了<br/>雙重<br/>雙重認證<br/>然後你給他啟動的話像我是綁定<br/>我這個是綁定到<br/>我的手錶<br/>假如你有智慧手錶跟手機可以連的話<br/>你就可以安裝這個<br/>只有這個是免費的<br/>Ok只有這個是免費<br/>那手機也可以安裝這個叫你要的話<br/>你手機就<br/>搜尋一下這個authy app<br/>然後你手機也可以用<br/>OK<br/>好那只有這一個套件是免費可以<br/>把那個密碼因為你在像我在Apple Watch我是可以把手機上的這一個apps<br/>安裝在手錶上<br/>所以你就只要帶手錶不需要帶手機<br/>就這樣<br/>好所以你聽到這裡面啦我們想要讀一下<br/>因為他這邊即便是簡體中文啊<br/>他還是英文啊所以你看<br/>他這邊怎麼講<br/>他說從<br/>因為我們上學期就知道了嘛<br/>從2023的3月<br/>到年底<br/>逐漸的開始強制<br/>所有用戶<br/>都必須要用雙重認證<br/>所以你只要有以前舊的帳號一定記得要趕快設因為他不知道什麼時候<br/>OK<br/>他這裡啊給你45天啊<br/>我給你45天因為你建帳號之後45天內你一定要趕緊把它弄起來沒有的話就進不去了<br/>那舊帳號我就不曉得他的他的policy怎樣然後你的帳號因為沒有雙重認證被鎖定<br/>你只好重建<br/>重建的部分不能用原來的那個email就比較麻煩<br/>因為他每一個email只能<br/>在這個github他們上登記一次<br/>然後那他的使用就是除了連到這邊之外<br/>他其實是利用<br/>利用這一個二維條碼所以你只要看他下面的說明啊<br/>有沒有<br/>這個是我們剛講的帳號下的設定<br/>然後選擇到密碼跟認證<br/>好然後在這個區域在這個區域啊<br/>你點選說我要啟用<br/>雙重認證<br/>英文的話是enable<br/>那你假如<br/>知道這個是啟用之後啊<br/>他這邊就會出現一個二維條碼<br/>所以這個二維條碼你就必須要用你的<br/>手機<br/>打開你的mobile意思就是給他的mobile裡面他會有一個<br/>相機的選項<br/>然後拍這個二維條碼<br/>然後他<br/>基本上他就會秀出啊<br/>你可以輸入到github的<br/>數字<br/>就這樣<br/>然後一旦設好之後很重要的一點啊<br/>好像這個就是二維條碼然後你說那麼完之後很重要的一點啊你一<br/>要下載這一個<br/>回覆的這個字串<br/>他叫做recovery Codes<br/>萬一你的手機壞掉<br/>或者是你的手機不見<br/>你沒辦法用啊因為這個時候你就要靠這個回覆嗎來<br/>取回帳號<br/>就這樣啊這個回覆嗎你要嘛把它存在隨身碟要嗎把它同時送到你<br/>遠端的<br/>比較常用的電子郵箱<br/>那保證說<br/>最後<br/>萬一相關的設定都在手錶或手機上的不見了你還<br/>可以拿這一串是一堆一堆這個編碼的數字加上<br/>來取回你的這個帳號<br/>而且你一定要<br/>把它下載否則它是上面會有一個選項他說你存了之後啊你說我已經存<br/>我的回覆碼<br/>然後這個時候你才可以把兩段因為他很害怕萬一你的這一個兩段式<br/>認證出問題的話這個帳號形同是沒有任何人可以登入<br/>那假如你是付費的話你還可以請他幫你處理<br/>我要去打電話也許要從你的這個帳號因為你付費的他有認證碼<br/>信用卡或者用什麼樣式用什麼方式來付錢對吧你說我就是<br/>也許還可以拿回來但是因為我們是免費的<br/>免費帳號是沒有這個金流的部分所以只靠這一個回覆碼來取回你的認證<br/>好像我們這個影片就可以把它存起來<br/>然後是在這裡</p>
<h3>cd2024_2b_2_如何從 Replit Account 設定 Connect 連結到 Github</h3>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/3VdJEzJY-oE?si=ISL1atN75CkkaQgT" title="YouTube video player" width="560"></iframe></p>
<p>影片敘述 :</p>
<p>本次上課內容與github和replit息息相關，如果需要使用replit協同、同步更改github上的內容，就需要利用本影片的步驟，進行github account 上的設定與 replit 去做連結，使其可以相互信任。</p>
<p>cd2024_2b_2_如何從 Replit Account 設定 Connect 連結到 Github.txt 逐字稿 txt 丟至downloads</p>
<p>開始啊<br/>我們就連到我登入這裡你必須要登入到<br/>你必須登入到github<br/>然後同時啊<br/>登入到replit<br/>所以你必須要啊先把兩邊把它連起來<br/>意思就是說你要跑到你的<br/>replit的這個帳號下<br/>這是你replit的帳號<br/>你要點選他的account<br/>這是你帳號下面的這個帳號<br/>設定<br/>所以我點選這個的話我目前啊<br/>在底下這裡其實我已經有連結了<br/>兩邊能不能信任<br/>靠的就是這個連線的服務<br/>就是這個<br/>假如你已經出現disconnect<br/>表示這一個你已經做過<br/>假如你是出現connect表示還沒有連結<br/>最假如你本身的github是對應到connect<br/>你就給他點下去<br/>他會在你的電腦安裝一個應用程式<br/>Ok表示你授權<br/>可以兩邊可以互通<br/>互通之後的帳號就會長這樣<br/>你想要連結到帳號下的設定<br/>OK<br/>那他底下這邊就有一個應用程式<br/>這個是帳號<br/>在整合區<br/>Integration是整合的意思<br/>他底下他就有一個Applications<br/>去找你兩邊的這個信任是成功的<br/>你點選這個Applications他就會出現這個<br/>所以你假如有Application下面有replit<br/>表示你的github跟replit兩邊是信任<br/>意思就說你待會假如吧<br/>倉儲啊輸入到你的replit<br/>改版完是可以推回來<br/>這個就是我們要的<br/>我說這個是第一部所以我們確定有這個之後啊<br/>我們待會再來做inport的動作所以我們這個小影片我們先把它<br/>拍下來ok所以我們小影片這一小段喔<br/>我們先拿</p>
<h3>cd2024 2b 4 說明如何將倉儲 import 至 Replit 改版後推回 github</h3>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/F1_YDWsGvwo?si=ETYzlygghWgq5wen" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>影片敘述 : </p>
<p>在本影片中，老師講述了如何在replit創造github的專案，詳細的講述每個指令的功用與意思，並敘述基本的指令與如何進行維護github的倉儲，說明如何將倉儲 import 至 Replit 改版後推回 github。</p>
<p></p>
<p>cd2024 2b 4 說明如何將倉儲 import 至 Replit 改版後推回.txt  逐字稿上傳至 downloads</p>
<p>逐字稿 </p>
<p>所以我們這邊必須要先知道就是說我們用的這一個<br/>tempreat就每一個人現在其實內容都一樣<br/>但是你必須要<br/>想辦法在replit上面<br/>來編輯因為你在近端的話也可以我們就要設key<br/>那個我們後面才會提到因為你在協同的時候<br/>不見得所有人都能上網<br/>OK<br/>意思就說他可能某一個時段他根本不用上網<br/>我還是可以做<br/>把我提交了幾次之後<br/>等到我能上網的時候我再把他推送<br/>那你中間的改版啊可能8個人到時候你是需要合併了<br/>那個合併或者解決衝突啊其實才是協同的一個問題<br/>那你之前上電腦輔助設計你應該有碰到<br/>只是說在協同的時候啊<br/>應該解決衝突的這個機會更多所以你必須要對這個系統有一點<br/>有更多的了解<br/>比方說所謂動態網站的資料<br/>Ok 其實是位在<br/>Config<br/>Content HTM這個檔案<br/>轉換完成的靜態資料是位在content的這個目錄下<br/>這是第一個要知道了<br/>那之前<br/>其實我們用蠻久了齁<br/>另外這個網站的原始檔是位在markdown<br/>所使用的網誌系統我們用的用python寫的這個早就在裡面<br/>只是我們之前都沒有<br/>特別把他提出來也沒有要求你要寫我那就這學期沒有考試喔<br/>重要的是每個禮拜你都要有進度註記<br/>那這個就<br/>其實跟考試是一樣啊<br/>看你東西有沒有做出來你8個組員反正有沒有貢獻其實你的<br/>這個組員都很清楚啦<br/>所以用的這個轉換完成的這個網頁就位在blog<br/>就好像我們現在看的<br/>我們看的這個網址<br/>這個是我們倉儲的網址<br/>對應的網站網址<br/>然後你只要打blog他就會出現<br/>底下從indesk假如我們把這個<br/>直接打到這個blog<br/>他就會有一個<br/>Indesk的網頁來派送所以我們打到這邊這個就是你的<br/>網址<br/>也就是內容管理的網址再加上blog我們打看看<br/>喔他就跑到這個外面這一頁<br/>那我們現在就是要教你怎麼去設定他<br/>讓你可以有這樣的一個連結<br/>這個時候還是一樣回到我們的<br/>這個倉儲裡面<br/>所以你現在假如正在看你的這個markdown<br/>基本上還沒有inport進來嗎<br/>Ok所以這裡變成說好那我們已經有設定兩邊連線我們這邊要<br/>怎麼把他弄進去<br/>我們現在<br/>已經登入到replit<br/>Ok而且我們要確定<br/>這個連線的部分啦已經完成<br/>意思是說你<br/>兩邊的服務<br/>待會我們inport到replit改版完是推的回去的<br/>Ok我們先來看<br/>所以我們就要從create可以一個專案<br/>現在你應該是已經登入到replit<br/>好啦當然剛剛我們一樣也是登入到github<br/>所以這個時候我要建立一個repl<br/>好謝你點這個create repl<br/>我們是要<br/>從github<br/>所以我們選的是這個<br/>我們並不是一個完全空的我們選的是inport from github你點選這個<br/>馬上會出現你剛剛建的<br/>他馬上<br/>會出現你剛才建的<br/>帳號下的這一個<br/>CD2024<br/>有沒有看到<br/>好所以你就直接在這個打勾說我要<br/>導入的就是這一個倉儲<br/>那這個倉儲因為是用python寫的所以你語言這個部分<br/>你必須要把內建的Note點js<br/>要改<br/>改成python<br/>Ok然後再<br/>他的表單這邊點選一下<br/>最確認說你是inport from github<br/>然後語言也選了正確的python之後<br/>你在按這一個inport from github<br/>我要再這樣的一個條件下導進來<br/>好像我就按inport他就開始幫你轉了<br/>我們必須要在這個平台上面<br/>安裝模組<br/>他並不知道我們要跑的套件是什麼<br/>欸我們現在要跑的是網際內容管理嗎<br/>那他需要<br/>對應的這一個倉儲<br/>最其實要的是這一串<br/>那怎麼辦因為我們現在就按到<br/>在這裡啊我們我們要打的是這個先看看能不能夠用複製的<br/>所以你第一步就在readme<br/>.md這邊啊你看看能不能複製<br/>看看能不能複製<br/>可能真的要打喔當然網頁的部分應該是可以複製<br/>可是要執行啊我們必須要在這個shell<br/>命令區<br/>console<br/>Output就是你執行的部分然後這個shell是要執行命令<br/>所以我們第一個就是要先把這個檔案啦設定可以執行<br/>那我們先想辦法把這個chmod u+x init_replit<br/>底線那其實他那個init_replit是一個我們已經安排在裡面的檔案<br/>好那我們看能不能把它貼上<br/>好他會問你說到底<br/>有沒有<br/>授權給這個網頁<br/>你可以把複製的部分檔案貼上來我說可以<br/>他就貼上來他至於這個指令是什麼意思<br/>這個指令是要跟我要改變啊檔案的屬性<br/>Ok空一格<br/>後面就是他的選項<br/>U代表的是user<br/>x代表是執行<br/>所以使用者要讓他可以加上執行的屬性<br/>針對的是哪一個檔案呢針對的是這個檔案<br/>所以這個指令一執行這個檔案原來不能執行馬上就可以使用者馬上可以執行<br/>不知道裡面有東西改變了他會重新載入這個<br/>shell的部分<br/>好然後接著<br/>就是執行他的執行一定要有<br/>現在所在的目錄<br/>下面的這個你怎麼沒有打前面的這個點加斜線他不會他不知道你要執行哪一個檔案<br/>好這樣的話他就會幫你安裝模組<br/>Ok意思就是說我們要按這個run之前你就必須要<br/>先根據<br/>這readme.md下的檔案的這兩個步驟<br/>而且要在shell面執行<br/>好那一段<br/>他這裡全部執行完的話<br/>他就會回復到<br/>回復到他的這個回應<br/>那這個回應的部分我們假如要把上面的已經執行完的訊息啊<br/>要把它清除的話我就打clear<br/>clear在Linux的一個指令<br/>清除畫面的意思<br/>Windows下面cls是一樣的<br/>我因為我們家有在Windows有沒有<br/>我們有時候在這裡面我們有一些畫面<br/>假如在Windows你要把它清除是CLS<br/>Clear scream<br/>是Windows dos的指令<br/>因為是Windows dos先出來<br/>不好意思用同樣了<br/>cls<br/>一樣清除畫面的意思<br/>我說剛剛我們打的是CLS<br/>這個是在命令列<br/>假如畫面就叫CLS然後在linux的話<br/>他是叫clear<br/>因為他有很多視窗你要在這個視窗上你滑鼠就要點這邊他這裡要變黑的<br/>你現在在這裡<br/>你案enter是作用在這裡<br/>是作用在這個小頁面上<br/>那我們為了要執行他<br/>你必須要滑水點在這個他才知道所以這個會變黑的<br/>好那一案enter他就會清除畫面<br/>安裝的所需模組之後你的run應該就有作用<br/>撒花之後他就開始<br/>在你剛才安裝的這些模組的平台<br/>環境中來執行執行哪一個<br/>其實他是執行main.py<br/>那我怎麼會知道耶<br/>好那這邊有一個設定<br/>你假如吧<br/>隱藏的檔案秀出來<br/>我再一次喔<br/>在這個檔案區有沒有那個檔案區有時候會不見喔<br/>有時候會不見<br/>給你按這個他就跑出來<br/>這裡這個<br/>好那這個檔案區的<br/>顯示這邊啊有一些檔案是隱藏起來<br/>這個是專門看要不要秀出這個<br/>檔案的顯示<br/>有一些檔案他是隱藏起來<br/>假如你點選這個顯示隱藏檔<br/>就是顯示碼<br/>隱藏的隱藏檔案一點他的話<br/>底下有兩個重要的檔案<br/>這兩個設定檔config file就是設定檔<br/>其中很重要的是這個檔<br/>點replit<br/>好那意思就說你按run到你他做了什麼你點他就知道了其實你點run<br/>你點run啊其實他就是呼叫python3 main.py<br/>就啟動那main.py是什麼<br/>main.py其實是一堆<br/>執行程式所以我們把main.py帶出來這裡面<br/>因為他這裡面會牽涉到兩層<br/>兩層的啟動這個<br/>是內容管理裡面<br/>那我們必須要知道說原來他就是透過<br/>python3來執行就好了<br/>這是我們編寫的網際內容管理系統<br/>那一旦你<br/>啟動之後<br/>他的這個webview<br/>我們可以把他拉到同一個畫面<br/>待會我們要編輯檔案會比較有比較大的範圍<br/>正把這些小頁面都把它拉到一起<br/>要待會我們其實是要<br/>抓出檔案在這裡來設定<br/>好那我們要設定的部分假如你想要看看我們之前用過的<br/>編輯<br/>你就可以直接用滑鼠右鍵把這個login在分頁中把它打開來<br/>我是這樣意思就說<br/>他就會給你一個網址可是這個網址對你來講<br/>沒有人可以知道你現在這個網址是什麼<br/>這表示說你講的是一個人使用的話<br/>你不需要去<br/>把設定的這個密碼<br/>用sercret代替不用你就直接用admin就好了<br/>這個小寫的admin<br/>就是跟近端編輯是一樣的<br/>因為這一串就是保護你<br/>admin admin小寫這個就是管理者的密碼<br/>被你admin你就直接進去啊<br/>那你要讓其他的人來分享<br/>分享這個編輯<br/>admin其實也可以<br/>但是萬一你這個<br/>連結的部分表說你現在<br/>把這一串連結<br/>劃到不同了<br/>瀏覽器上面<br/>那我這邊<br/>我有登登入所以不行你可以試試看<br/>這一串連結只要知道的人就可以用admin進來編輯<br/>簡單講就這樣<br/>好所以你應該馬上可以<br/>編輯這一串<br/>你的網頁在哪裡啊<br/>從剛剛設的就知道啦<br/>我們剛才是在這個帳號下的倉儲對吧<br/>然後我們倉儲裡面有建一個CD2024<br/>所以這個是你的倉儲好了把它copy下來<br/>那我們剛才編輯的這裡面我們填入倉儲的位置<br/>網頁我們假如自己知道的話自己拼出來假如你直接想要從裡面copy<br/>也可以<br/>進到setting<br/>然後進到pages<br/>這個就是你的倉儲<br/>是你的網頁<br/>好這個把他copy過來<br/>copy一樣<br/>把它放到你的網頁去<br/>可是問題來啦<br/>網誌跟簡報呢你必須要想辦法在這個連結後面加上blog<br/>加上review<br/>可是你假如直接用剛才copy的那個網址<br/>你把它貼上來之後<br/>你在打blog<br/>那這樣沒有辦法變成<br/>的連結對不對<br/>那這裡要怎麼辦<br/>我想要有前面這一個網頁的純字串我不要你<br/>附加html的資料<br/>那怎麼辦<br/>我們就可以回來回來<br/>然後把這個刪掉<br/>問題是我們這個上面複製的部分要漂白<br/>那通常漂白可以跑到這裡<br/>這個區域因為這個是純網頁所以你把它貼上來<br/>複製<br/>html連結就不見<br/>這個時候你不要用OK啦因為這裡面其實是讓我們放<br/>程式碼的地方只是我們要利用這個網頁的表單<br/>把附加的超文件刪掉這個時候你再貼回來他就是乾淨的字串<br/>我說這個這個做法一定要把它學起來當然你也可以回到<br/>Windows的編輯器來漂白只拿到他的這個字串所這個時候啊你想要<br/>畫面直接在打blog在案enter<br/>然後他就ok<br/>不然的話你還要進入這個超文件編輯在那邊搞半天<br/>所以這裡面變成說通常這個是我的做法<br/>所以是這樣的話你的<br/>簡報就是純文字<br/>再加上review<br/>這樣的話你就可以把你對應的about裡面的這些資料都把它填好<br/>OK<br/>那至於底下這個跟我們不相干的我們就可以把它刪掉<br/>然後再把他按safe<br/>至於我們上面這個有關Cmsimde的說明我們把它寫在第二頁<br/>我不要說這個SMAP就是<br/>你按的話他會按到幾次列出目前的所有<br/>因為我們現在都是一階的嗎所以你可以選他<br/>他就會show<br/>這個部分<br/>我們要改config說你現在想要改config<br/>要改這個頁面<br/>標題<br/>你就按config<br/>Ok然後我們這邊我們是<br/>所以我自己去<br/>是我的帳號<br/>cd2024<br/>send<br/>這個時候我要把現在這個版本<br/>我要把它送到我真正的github page<br/>叫他背景上<br/>我就必須要先<br/>按一下convert<br/>我要他轉成靜態<br/>這個時候再回來<br/>我們現在需要git<br/>git的工具在哪裡跑到底下可以來找<br/>你按一下看一下這個裡面他就有git底下他就有git這個小頁<br/>所以他已經知道你從這裡就可以看出我現在有改版的部分就在這裡<br/>我說這個也是replit不斷地在進化對不對好所以我們到這邊來講我們就<br/>我們已經修改<br/>網站標題<br/>而且<br/>而且怎麼樣在about<br/>頁面<br/>填入對應的所以我們剛剛做什麼<br/>我們填入在about頁面填入<br/>正確的<br/>倉儲<br/>網誌<br/>網站連結的這個是每個人都不一樣因為你的帳號不一樣啊<br/>你的github帳號會對應<br/>不一樣的<br/>倉儲的連結網製的連結網站的連結<br/>我們剛剛就做了這些改變這個時候我們把它<br/>讓他提交<br/>提交之後他這邊就會出現這樣<br/>你去看喔<br/>這個就是遠端remo就是遠端<br/>所以他會說update跟遠端同步的就是一個提交<br/>底下我們剛剛提交的那個部分啊<br/>還沒有push<br/>還沒有推到遠端<br/>那我們就推就好了嗎<br/>因為權限剛剛已經建立了嘛所推的時候他就出現這個<br/>你要確認confirm<br/>comfirm是確認<br/>確認這一個階段所完成的改版<br/>要不要推上去假如不要就案deny<br/>假如要<br/>後面這個確認確認<br/>他就會推上去因為權限剛才考那個時候已經建立<br/>好所以表示說這個已經上來<br/>表示說我們現在見的這個<br/>已經跑到<br/>目前在轉檔<br/>這個就是剛剛提交的內容<br/>就這樣<br/>待會我們的遠端網站<br/>就會跟動態網站的內容同步<br/>好說我們先把這個影片我們先把它存下<br/>待會我們再來設定完<br/>網誌的部分</p>
<h2>w5</h2>
<p>協同產品設計實習的第五週, 教學內容為先前影片整理、分組網誌的統整，並將第四周第六組所有影片統整至下方</p>
<p></p>
<p></p>
<p>教學影片分組整理並自評</p>
<p>請各組自行搜尋前面已經發布的教學影片, 分別為</p>
<ul>
<li>在影片上填上字幕, 另行上傳到可以嵌入到各分組的網站上</li>
<li>從影片字幕中整理出逐字稿, 放在影片下方, 以 .txt 連結安排</li>
<li>並在各嵌入的教學影片下方, 以摘要方式說明該影片的教學重點</li>
</ul>
<p></p>
<p>cd2024 2b 4 說明如何將倉儲 import 至 Replit 改版後推回 github</p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/F1_YDWsGvwo?si=ETYzlygghWgq5wen" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>cd2024 2a 1 blog setup</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/arG0XNdHuYA?si=4gdnM3cydnl0Vq3C" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>cd2024 2b 1 建立個人課程倉儲與網站</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/6BMiOcVb8v0?si=X5-MnxK7_Gq9tJgJ" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>cd2024_2b_2_如何從 Replit Account 設定 Connect 連結到 Github</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/3VdJEzJY-oE?si=ISL1atN75CkkaQgT" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>cd2024 2b 3 如何設定 Github 帳號的雙重認證</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/pPD1wOjpyfQ?si=U9TR2NMuhe_u9Ys1" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>cd2024_2b_7_w2 利用 codespaces 維護分組網站</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/3OGCk_aDP9U?si=yMsGIIgbKW5y-D_u" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>cd2024_2b_6_w2 從第一組空倉儲建立 cmsimde_site 內容</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/-kkxZlGnUuU?si=AK-i0udz4_1B5C5E" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>cd2024_2b_5_w2 第一組組長建立 Team 並設定分組倉儲</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/vwYnRnk8K_4?si=6Clg0_VxbWCGILLA" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>cd2024_2a_w2_1(41023239楊祐銘)</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/i5Nd69gyqGg?si=oxddneY7WmtC4J9N" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>cd2024 2a w2 4 利用 Replit 管理 Github Classroom 分組倉儲(41023239楊祐銘)</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/N_Tx_ZJjoJ0?si=ElBKbH9R9bQXXMVD" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>wcm2024_1a_w3_2_將組員的個人倉儲納為分組倉儲的子模組</p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/w5JspsZ91Dc?si=WdhATyhj6z_h4rxs" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p></p>
<p></p>
<p></p>
<div>
<div class="syntaxhighlighter jscript" id="highlighter_594803"></div>
</div>
<h2>w6</h2>
<p>更改個人.md與slug名稱加上個人或群組分組</p>
<p>更新分組倉儲中的分組倉儲</p>
<p>cd2024 2a w6 取下子模組, 以及更新學員倉儲內容</p>
<p>1. 教學影片如下:</p>
<p>cd2024 2a w6 利用 pelicanconf py 整合各組員的網誌</p>
<p>2. 教學影片如下:</p>
<section class="post-info">
<div class="clear">
<div class="fluid-width-video-wrapper"><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="150" id="fitvid494765" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/BtYUHe8Actk?si=x2nLtoDQ40NwUxwp" title="YouTube video player" width="300"></iframe></div>
<div class="fluid-width-video-wrapper"></div>
</div>
<div class="clear">
<div class="fluid-width-video-wrapper">
<div class="fluid-width-video-wrapper"><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="150" id="fitvid488494" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/XkImjlZSGGk?si=x6JLe9MPVC2mO-FH" title="YouTube video player" width="300"></iframe></div>
</div>
</div>
</section>
<p>教學影片分組整理並自評</p>
<h2>w7</h2>
<p><span>協同產品設計實習的第七週, 本週為清明連假期間，觀看老師blog網站更新之內容，調整個人與組別markdown下.md與slug之名稱，防止群組組員submodules中的資料衝突無法更新latex</span></p>
<p><br/><span></span></p>
<p>其中首先要求各組員必須每週在 cd2024 倉儲中的 markdown 目錄編寫 markdown 網誌文章, 再經由<span> </span><a href="https://getpelican.com/">Pelican</a><span> </span>轉檔至 blog 目錄中的超文件網誌. 由於<span> </span><a href="https://getpelican.com/">Pelican</a><span> </span>採用 Python 檔案進行設定, 因此可以在轉檔的過程中, 將各子目錄中的組員倉儲網誌集合到分組倉儲中的 combined_markdown 目錄之後, 再指定將網誌超文件轉至各分組倉儲的 blog 目錄.</p>
<p>由於分組網誌內容協同時, 所有組員所編寫的 markdown 文章必須存入 combined_markdown 目錄, 因此 markdown 網誌文章檔案的命名不可重複, 且各網誌文章的 Slug 字串將會被當作用來命名轉檔後的超文件檔案名稱, 因此也不能重複.</p>
<p>至於當各組員採用 Replit 維護個人倉儲內容時, 可以直接從<span> </span><a href="https://replit.com/">Replit</a><span> </span>Connect 至<span> </span><a href="https://github.com/">Github</a><span> </span>取得維護倉儲的權限, 旦卻無法直接用管理分組倉儲, 因為各組員雖然擁有管理分組倉儲的權限, 但是無法在<span> </span><a href="https://replit.com/">Replit</a><span> </span>中以免費的組員帳號管理<span> </span><a href="https://classroom.github.com/">Github Classroom</a><span> </span>所取得的分組倉儲. 而必須動態納入針對分組倉儲的 OpenSSH 管理權限.</p>
<p></p>
<p></p>
<h2>w8</h2>
<p>本週為第八周，觀看下方影片了解自己的任務與需要做的事情，並進行每周進度統整</p>
<p>cd2024 2a w8 產品協同架構說明</p>
<div class="fluid-width-video-wrapper"><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" data-mce-fragment="1" frameborder="0" height="150" id="fitvid472201" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/CqhZm_9ugdc?si=O9ggtDyapJdaVsOs" title="YouTube video player" width="300"></iframe></div>
<p>協同產品設計實習課程使用網際內容管理系統, 採<span> </span><a href="https://classroom.github.com/">Github Classroom</a><span> </span>建立分組倉儲, 並由學員自行利用<span> </span><a href="https://github.com/mdecycu/cmsimde_site">cmsimde_site</a><span> </span>作為<span> </span><a href="https://github.com/">Github</a><span> </span>倉儲的引擎目錄, 利用 Python 執行網頁編輯. 之後再轉檔為靜態網頁, 以便利用<span> </span><a href="https://pages.github.com/">Github Pages</a><span> </span>所提供的<span> </span><a href="https://en.wikipedia.org/wiki/World_Wide_Web">WWW</a><span> </span>伺服器呈現協同產品設計過程的相關多媒體內容.</p>
<p>除了章節式的網站外,<span> </span><a href="https://github.com/mdecycu/cmsimde_site">cmsimde_site</a><span> </span>還額外利用<span> </span><a href="https://getpelican.com/">Pelican</a><span> </span>管理使用者所建立的網誌, 以及利用<span> </span><a href="https://revealjs.com/">Reveal</a><span> </span>管理使用者所建立的網際簡報.</p>
<p>在使用者每週的內容管理過程, 由於必須採用 Python 執行網頁編輯,<span> </span><a href="https://mde.tw/cd2024">cd2024</a><span> </span>課程採用了四種不同的方法進行, 其中包括<span> </span><a href="https://replit.com/">Replit</a>、<a href="https://github.com/codespace">Codespaces</a>、<a href="https://gitpod.io/">Gitpod</a><span> </span>以及 localhost. 由於前三者屬於雲端作業, 各有不同的使用規定與免費使用權限, 對於多人協同的產品設計團隊而言, 可以根據各自的喜好與環境選擇合用的網頁編輯工具, 且在多方了解下也可透過實際使用發展中的雲端 IDE 環境, 一窺未來可能的 AI 導引前景.</p>
<h2>w9</h2>
<p>第九週 填個人期中自評，了解需要分工之進度與工作，進行個人與團隊倉儲之資料整理並解決群組倉儲衝突。</p>
<p>協同產品設計實習的專案實習, 透過 ChatGPT、Gemini 1.5 Pro 與 Claude 3 的協助下進行.</p>
<p><strong></strong></p>
<p></p>
<p>課程評分:</p>
<p>學員每週編寫網誌內容佔 40%</p>
<p>每週上課內容摘要與分組報告執行分工及進度整理</p>
<p>相關資料收集與閱讀心得</p>
<p>分組期中報告 (<a href="https://www.google.com/search?q=latex+%E6%95%99%E5%AD%B8">LaTeX</a><span> </span>-&gt; pdf) 與簡報影片 (<a href="https://obsproject.com/">OBS</a><span> </span>-&gt; mp4) 佔 20%</p>
<p>分組期末報告 (<a href="https://www.google.com/search?q=latex+%E6%95%99%E5%AD%B8">LaTeX</a><span> </span>-&gt; pdf) 與簡報影片 (<a href="https://obsproject.com/">OBS</a><span> </span>-&gt; mp4) 佔 40%</p>
<p></p>
<h2>W10 實習任務一</h2>
<p>將老師給的2a出席名單，將程式詢問AI後，將程式改寫並在每一行後方進行註記，方便了解與解析此Brython程式如何進行運作</p>
<p><span>內容與重點，程式是如何運行與操作的</span></p>
<p>這個程式是一個Python腳本，它使用了Brython庫（Python的瀏覽器端實現），用於在網頁上動態加載和處理CSV文件數據，並將處理後的數據以HTML的形式插入到網頁中。</p>
<p>讓我們來看一下它的主要功能和運行流程：</p>
<p>1. **導入模塊**：程式一開始導入了需要使用的模塊，包括`window`（瀏覽器窗口對象）、`ajax`（用於發送Ajax請求）、`document`（HTML文檔對象）、`html`（HTML元素生成器）。</p>
<p>2. **fetch_csv_data函數**：這個函數是整個程式的主要部分，它用於獲取CSV數據並將其轉換為HTML格式插入到網頁中。</p>
<p>- **CSV文件地址定義**：將CSV文件的URL地址存儲在變量`url`中。<br/> <br/> - **請求完成回調函數**：定義了`on_complete`函數作為Ajax請求完成後的回調函數。如果請求成功（狀態碼為200或0），則執行以下操作：<br/> <br/> - 讀取CSV文件內容並按行拆分。<br/> <br/> - 遍歷每一行數據，忽略空行，將非空行按逗號拆分，並將拆分後的數據存儲到列表中。<br/> <br/> - 去除第一行（標題行），保留數據行。<br/> <br/> - 針對每個學生的數據，生成其個人網站鏈接、GitHub倉庫鏈接，以及小組網站鏈接和GitHub倉庫鏈接。<br/> <br/> - 將生成的鏈接和相關信息插入到HTML頁面中的指定位置。<br/> <br/> - **發送Ajax請求**：使用Ajax對象發送GET請求到指定的URL，綁定了完成事件，設置請求頭部，並發送請求。<br/> <br/>3. **調用fetch_csv_data函數**：在程式末尾調用了`fetch_csv_data`函數，觸發CSV數據的獲取和處理過程。</p>
<p>總的來說，這個腳本通過Ajax請求獲取CSV數據，然後解析該數據並生成HTML元素，最後將生成的HTML插入到網頁中，完成了將CSV數據動態展示在網頁上的功能。</p>
<p></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/41023124/500875a36052f90472928c0fd722707e/raw/42ccb4354ff3beaf2b5771b40cd2133d1d8c944d/2a2"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p></p>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>
<p></p>
<p></p>
<p></p>
<p></p>
<h2>w11</h2>
<p><span>協同產品設計實習第十一週實習操作, 各學員利用 NX 1872 繪製鋼球平衡台所需的零組件.</span></p>
<p>進行在倉儲 <a href="https://github.com/mdecd2024/2astud-2asite">https://github.com/mdecd2024/2astud-2asite</a> 中編輯各分組 (例 本組為 g6) 中的專案，打個人上課與誰協同、上課地點、設備等等....心得。</p>
<p>觀看老師的兩個影片，第一個影片說明心得內容與第十週後要進行的事情，第二個影片為如何在<a class="color-fg-default" data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" href="https://github.com/mdecd2024/2astud-2asite">2astud-2asite</a>中避免衝突，使用個人分支，使用指令 git branch (查看分支)、git branch 41023124(名稱)(新增分支)、git checkout 41023124(切換分支)，git push origin 41023124 (在遠端建立41023124)、git merge 41023124(進行分支合併)等等指令，</p>
<p>41023124 : </p>
<p>本堂課為協同產品設計與實習，前三週為設定個人倉儲，了解<span> </span><span>Github、</span>Replit與Codespace如何使用與其上傳協同原理和創建PuTTy，第四週與第五週將前三週的每一個教學錄影影片進行字幕的編輯與逐字稿，相較於前三週，第四週進度與任務速度有點快，因為剛開始並不是每個組員都有參加，所以少數組員需要完成所有影片字幕與逐字稿。</p>
<p>協同產品設計與實習這門課相較於較為傳統的上課方式有很大的不同，課堂並不是只有死板的知識與課本，需要利用網絡、AI去幫助自己與群組完成共同的編輯與協同，在這門課中使用 Github、Codespace、Replit、Odoo、NX、Coppeliasim去完成協同與繪製任務，也強調了組員之間的分工與合作，才能迅速的完成老師在每一周交代的任務。</p>
<p>目前到了w11，上課時段都是前往0810電腦教室使用USB下載的近端、Replit與Codespace相互協同編輯，有時候下課後在教室沒有做完，就回宿舍使用自己的筆電，相較於自己的筆電，學校的電腦每次重啟都需要加入鑰匙和自己習慣的設定，而且滑鼠不好用。</p>
<p>第一個教學影片:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/A4wgWLZShco?si=0qiGk_3xf7cWdzlt" title="YouTube video player" width="560"></iframe></p>
<p><span>第二個教學影片:</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/N4QPHMznMGc?si=VJjt6dzVeb7VK9lg" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p></p>
<h2>w12</h2>
<p><span>協同產品設計實習第十二週實習操作, 各學員利用 NX 1872 繪製鋼球平衡台所需的零組件, 將各分組倉儲設為評分倉儲的子模組, 跨網路操控模擬場景裝置.</span></p>
<p>w12一共有三個群組任務</p>
<p>照著下方教學影片執行，使用NXOpen分別執行畫好的.py程式，<span>透過錄製 Journal 程式產生，兩個程式合併為一個程式( nxopen_combine_block_and_drill_hole 與 nxopen_platform_part )</span></p>
<p><span>任務一 : 分配每個組員至少繳交一份零件繪製的 NXOpen Python 程式以及至少一份零件組立的 NXOpen Python 程式, 完成後, 請在個人的課程網誌紀錄 w12 實習任務一的執行心得.</span></p>
<p><span>41023124 : 在使用nx畫圖時，剛開始不太熟悉，需要練習練習，並且第一次使用.py的方式去錄影畫零件，開啟就可以跑出過程與最後畫好的零件，但是在存檔時要注意，不能存零件檔，不然.py檔會打不開。</span></p>
<p><span><a href="/downloads/w12 prt檔.zip">零件prt檔</a>     <a href="/downloads/w12 py檔.zip">零件py檔</a>       <a href="/downloads/assembly prt檔.zip">組合件prt檔</a>     <a href="/downloads/assembly py檔.zip">組合件py檔</a>  </span></p>
<p><span>0:13 為 base_w      0:49 為 platform       1:30 為 s_link       1:50 為 shaft      2:05 為 y_link    2:34 為 assembly</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/2kD7b0qfWIg?si=JWtm96hrAYTiIESM" title="YouTube video player" width="560"></iframe></p>
<p><span><img alt="" height="450" src="/images/assembly.png" width="800"/></span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/2DbqX2Hin6M?si=5BTv0SIVJghpKHlR" title="YouTube video player" width="560"></iframe></p>
<p>-----------------------------------------------------------------------------------</p>
<p>任務二 : 將各分組倉儲設為評分倉儲的子模組</p>
<p><span>2a 評分倉儲: </span><a href="https://github.com/mdecd2024/2astud-2asite">https://github.com/mdecd2024/2astud-2asite</a></p>
<p>將群組(g6)倉儲設定在評分倉儲(上方網址)之子模組下，以便後續分數的評分</p>
<p>-----------------------------------------------------------------------------------</p>
<p>任務三 : cd2023 足球機器人網際場景模擬</p>
<p>練習跨網路操控足球機器人進行競技，依照下方教學影片練習，步驟為<br/>1.下載Python 模組: pip install pyzmq cbor keyboard 。</p>
<p>2. 下載 <a href="https://github.com/mdecd2023/2a3-pj3ag4">https://github.com/mdecd2023/2a3-pj3ag4</a> 網站中的 zip檔案，解壓縮後的download下 zmq_football/site.ttt 檔案或者git clone <a href="https://github.com/mdecd2023/2a3-pj3ag4">https://github.com/mdecd2023/2a3-pj3ag4</a> 。</p>
<p>3.將下載包中的judge.py與player.py開啟，並將 ip中的 localhost 修改為 自己的ip(如影片中框選的)(120.113.99.41) 。</p>
<p>4.確認檔案與程式沒有任何問題後，Tools and Go 兩個程式，judge為裁判與時間，player為控制球員(wasd 前後左右)。</p>
<p></p>
<p>此影片為操作練習任務三影片</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/89qNoblFr3k?si=LH-wgXI-XstvJrWA" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>任務二與任務三教學說明影片</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/rOaWBEFZOLY?si=84noVMYNHEMFiHnX" title="YouTube video player" width="560"></iframe></p>
<p></p>
<h2>w13</h2>
<p>本週為協同產品設計與實習第十三週，說明最後一個月的自我評分項目與說明如何將零組件以 STL 轉入 CoppeliaSim，並且將前兩週使用Solvespace與NX繪製之零件完成與組裝</p>
<p>cd2024 w13 2a 說明各程式模組之所以作為可攜以及最後一個月的自我評分項目</p>
<p><span><a href="/downloads/w12 prt檔.zip">零件prt檔</a>     <a href="/downloads/w12 py檔.zip">零件py檔</a>       <a href="/downloads/assembly prt檔.zip">組合件prt檔</a>     <a href="/downloads/assembly py檔.zip">組合件py檔</a>  </span></p>
<p><span>0:13 為 base_w      0:49 為 platform       1:30 為 s_link       1:50 為 shaft      2:05 為 y_link    2:34 為 assembly</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/2kD7b0qfWIg?si=JWtm96hrAYTiIESM" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/Cy3j6n0a9wQ?si=kZhKFngcSPxqnalY" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>cd2024 w13 2a 說明如何將零組件以 STL 轉入 CoppeliaSim</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/-0mbtk1AuoY?si=GudlON0u65rM4ch0" title="YouTube video player" width="560"></iframe></p>
<p></p>
<h2>w14</h2>
<p><span>本週為協同產品設計與實習第十四</span><span>週</span></p>
<p>至以下連結回報區回報 2a w13 鋼球平衡台零組件與 NXOpen Python 程式</p>
<p><a href="https://github.com/mdecd2024/2astud-2asite/discussions/33">https://github.com/mdecd2024/2astud-2asite/discussions/33</a> </p>
<p></p>
<p><span>第六組 鋼球平衡台Onedrive下載連結 </span><a href="https://drive.google.com/drive/folders/1bYRx5cun-KOXZZZAd22t3SKQe90JsO46?usp=drive_link" rel="nofollow">https://drive.google.com/drive/folders/1bYRx5cun-KOXZZZAd22t3SKQe90JsO46?usp=drive_link</a><br/><span>鋼球平衡台倉儲網站 </span><a href="https://mdecd2024.github.io/2a-midag6/content/w12.html" rel="nofollow">https://mdecd2024.github.io/2a-midag6/content/w12.html</a></p>
<p><span>w14教學影片一內容<br/>利用 <a href="https://mde.tw/cd2024/downloads/cd2024_2b_g6_steel_ball_platform_nxopen.7z">2bg6 所完成的 NXOpen 鋼球平衡台零件組立與轉檔程式</a> 解壓縮後，cd2024_2b_g6_steel_ball_platform_nxopen 中的 do_platform_assembly_and_save_STL.py 進行轉主力檔產生stl與prt，最後將stl Import Mesh 至 CoppeliaSim 中(如下圖)(以下為圖片與w14教學影片)</span></p>
<p><img alt="" height="449" src="/images/w12教學影片一.png" width="800"/></p>
<p>w14教學影片二內容<br/>將 <a href="https://github.com/mdecd2023/2a3-pj3ag4">https://github.com/mdecd2023/2a3-pj3ag4</a> download下來，執行程式為2a3-pj3ag4/downloads/zmq_football/，程式庫為 zmqRemoteApi_IPv6 以及裁判程式 judge.py 與球員程式 player.py 、運動場景為site.ttt組成的足球計時器場景。</p>
<p>實際操作步驟與操作影片至 w12<span>任務三 : cd2023 足球機器人網際場景模擬中查看<br/>最後再發想如何加入本學期的籃球框，踢足球進球門為1分，拖球至籃框為5分。</span></p>
<p>w14教學影片一</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/PKmqI_FaliI?si=LApz4SADRQXsS-FA" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p><span>w14教學影片二</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/Hyx9cW2LJVM?si=wCDwY5jTjMJEoMok" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p></p>
<h2>w15</h2>
<p><span>本週為協同產品設計與實習第十五</span><span>週</span></p>
<p>1.組員將上禮拜還未繪製完成之零件檔與py檔繪製完成<br/>2.看老師將彈珠平衡台加入joint與其他設定，完成彈珠平衡台的平衡<br/>3.其餘組員將個人與群組倉儲之資料進行彙整和整理與利用CoppeliaSim將之前的足球遊戲合併籃球之專題進行發想 使用何種機構能夠將球托起來並進入籃球框中，並繪製與改善程式，嘗試實現此專題設計。</p>
<p>嘗試改善機構</p>
<p><img alt="" height="270" src="/images/繪製托盤之設計.png" width="480"/></p>
<p>改善程式加入翻轉托盤、頂球</p>
<p><img alt="" height="270" src="/images/1234.png" width="480"/></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/6SajLQpoYpo?si=RR5NWAoTPdZ9Csph" title="YouTube video player" width="560"></iframe></p>
<h2>w16</h2>
<p>本週為協同產品設計與實習第十六週<br/>本周上課為填本分表單 <a href="https://docs.google.com/forms/d/e/1FAIpQLSduO5lTJtheYfoQEzIJPj8Ub6T7K2VdkTwIarz5_T7Ue1ECCg/viewform?pli=1">https://docs.google.com/forms/d/e/1FAIpQLSduO5lTJtheYfoQEzIJPj8Ub6T7K2VdkTwIarz5_T7Ue1ECCg/viewform?pli=1</a> </p>
<p>與繼續完成期末機器人設計、程式編寫與更改、模擬，場景球框得分錯誤更改 ; 檔案將上傳至github倉儲downloads下</p>
<p>更改player球員程式，r為升起大臂，f為降低大臂</p>
<p><img alt="" height="270" src="/images/playerpyrewrite.png" width="480"/></p>
<p></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from zmqRemoteApi import RemoteAPIClient
import keyboard
import math
import time

client = RemoteAPIClient('localhost', 23000)

print('Program started')
sim = client.getObject('sim')
# sim.startSimulation()
print('Simulation started')

v = 8
a = 40

# 選擇控制的球員
player = '/a_player1'


def setVelocity(lfwV, rfwV, lbwV, rbwV):
    leftMotor1 = sim.getObject(player + '/joint_lf')
    rightMotor1 = sim.getObject(player + '/joint_rf')
    leftMotor2 = sim.getObject(player + '/joint_lb')
    rightMotor2 = sim.getObject(player + '/joint_rb')
    sim.setJointTargetVelocity(leftMotor1, lfwV)
    sim.setJointTargetVelocity(rightMotor1, rfwV)
    sim.setJointTargetVelocity(leftMotor2, lbwV)
    sim.setJointTargetVelocity(rightMotor2, rbwV)
    # 輸入四個變數分別給四個軸速度


def setangel(y):
    ontology = sim.getObject(player)
    angel = [-90 * math.pi / 180, y * math.pi / 180, 0 * math.pi / 180]
    leftMotor = sim.getObject(player + '/joint_lf')
    rightMotor = sim.getObject(player + '/joint_rf')
    sim.setObjectOrientation(leftMotor, ontology, angel)
    sim.setObjectOrientation(rightMotor, ontology, angel)
    # 輸入一個變數改變前輪方向


def controlangel(y):
    if keyboard.is_pressed('a'):
        setangel(-y)
    elif keyboard.is_pressed('d'):
        setangel(y)
    else:
        setangel(0)


def setRotation(joint_name, target_angle):
    joint = sim.getObject(player + joint_name)
    current_angle = sim.getJointPosition(joint)
    target_angle_radians = target_angle * math.pi / 180  # 將目標角度轉換為弧度

    # 調整每一步的角度增量
    step_size = 5 * math.pi / 180  # 每一步旋轉5度
    steps = int(abs(target_angle_radians - current_angle) / step_size)

    print(f'Current angle (radians): {current_angle}')
    print(f'Target angle (radians): {target_angle_radians}')
    print(f'Steps: {steps}')

    # 平滑地移動到目標角度
    for _ in range(steps):
        if target_angle_radians &gt; current_angle:
            current_angle += step_size
        else:
            current_angle -= step_size
        sim.setJointPosition(joint, current_angle)
        time.sleep(0.01)  # 小延遲以模擬平滑運動
        if keyboard.is_pressed('q'):  # 在過程中允許用戶終止操作
            break

    # 最後確保精確設置到目標角度
    sim.setJointPosition(joint, target_angle_radians)
    print(f'Set {joint_name} to angle {target_angle}')


def resetJointPosition(joint_name):
    joint = sim.getObject(player + joint_name)
    sim.setJointPosition(joint, 0)
    print(f'Reset {joint_name} to 0')


def turnover():
    floor = sim.getObject('/Floor')
    player1 = sim.getObject(player)
    a = sim.getObjectOrientation(player1, floor)
    b = sim.getObjectPosition(player1, floor)
    a[0] = 0
    a[1] = 0
    b[2] = 0.3
    sim.setObjectPosition(player1, floor, b)
    sim.setObjectOrientation(player1, floor, a)


def playercontrol(x, y):
    if keyboard.is_pressed('w'):
        setVelocity(x, x, x, x)
        controlangel(y)
    elif keyboard.is_pressed('s'):
        setVelocity(-x, -x, -x, -x)
        controlangel(y)
    elif keyboard.is_pressed('a'):
        setVelocity(-x, x, -x, x)
    elif keyboard.is_pressed('d'):
        setVelocity(x, -x, x, -x)
    elif keyboard.is_pressed('space'):
        turnover()
    elif keyboard.is_pressed('q'):
        # stop simulation
        sim.stopSimulation()
    elif keyboard.is_pressed('r'):
        print('R key pressed')
        setRotation('/joint_rf2', 45)
    elif keyboard.is_pressed('f'):
        print('F key pressed')
        setRotation('/joint_rf2', 120)
    elif keyboard.is_pressed('g'):
        print('G key pressed')
        setRotation('/joint_up', -200)
    elif keyboard.is_pressed('h'):
        print('H key pressed')
        setRotation('/joint_up', 0)
    else:
        setVelocity(0, 0, 0, 0)
        setangel(0)


while True:
    if keyboard.is_pressed('shift'):
        playercontrol(v + 4, a - 20)
    else:
        playercontrol(v, a)

</pre>
<p></p>
<p>更改進球後得分加錯記分板(將球門名稱更改)，與投進籃框後得5分(-36改成-179.9999)</p>
<p><img alt="" height="334" src="/images/wrongdoor.png" width="480"/><br/><br/>footballcourt 場地</p>
<p><img alt="" height="270" src="/images/footballcourt.png" width="480"/></p>
<p>player 球員</p>
<p><img alt="" height="270" src="/images/player.png" width="480"/></p>
<p>site場景</p>
<p><img alt="" height="270" src="/images/site.png" width="480"/></p>
<p>操作影片<br/><br/></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/qX-zUc79-L8?si=cZZueZx-9MpKwHLj" title="YouTube video player" width="560"></iframe></p>
<h2>w18</h2>
<p><span>本週為協同產品設計與實習第十八週</span></p>
<p><a href="https://docs.google.com/forms/d/e/1FAIpQLSdzNXAwl8Wj2srvvBXCMShauMfZhWrAPH28CMbXLxQ_BFrS-A/viewform?pli=1">https://docs.google.com/forms/d/e/1FAIpQLSdzNXAwl8Wj2srvvBXCMShauMfZhWrAPH28CMbXLxQ_BFrS-A/viewform?pli=1</a> </p>
<p>完成以上期末表單</p><h1>解決群組倉儲衝突方法</h1>
<p>請"每位"組員檢查自己的上傳、編輯方式中 ( Codespace 、近端、Replit )有沒有之前弄錯的子模組 ( cd2024 與 4102324 ) ，如果有的話請刪除，不然之後上船都會有問題，以下是刪除方法。</p>
<p>如果你的codespace有cd2024的子模組<br/>就打<br/>git submodule deinit cd2024<br/>git rm --cached cd2024<br/>rm -rf cd2024<br/>刪除完在git push就好 </p>
<p>反之有4102324 就把cd2024改為4102324</p>
<p>這張照片我刪完了，所以看不到cd2024，自己檢查有沒有 ( Codespace)</p>
<p><img alt="" height="371" src="/images/messageImage_1714132138476.jpg" width="800"/></p>
<p></p>
<p></p>
<h1>w17</h1>
<p><span>本週為協同產品設計與實習第十七週</span><br/><span>本周上課為填本分表單</span></p>
<p><a href="https://docs.google.com/forms/d/e/1FAIpQLSdd4WdqZCfabonlM8jOzdpd3jQl_831C_7qXJBZuL8nOQ5NWA/viewform?pli=1">https://docs.google.com/forms/d/e/1FAIpQLSdd4WdqZCfabonlM8jOzdpd3jQl_831C_7qXJBZuL8nOQ5NWA/viewform?pli=1</a> </p>
<p>並完成連結中的任務 <a href="https://github.com/mdecycu/cd2024/discussions/19">https://github.com/mdecycu/cd2024/discussions/19</a> </p>
<p>任務內容 : </p>
<p dir="auto">請根據<span> </span><a href="https://mde.tw/cd2024/content/index.html" rel="nofollow">https://mde.tw/cd2024/content/index.html</a><span> </span>網頁中的期末報告題目說明, 逐一完成下列評量項目,</p>
<ol dir="auto">
<li>
<p dir="auto">請利用 NX1872, 完成可以參與球賽競技的機器人零件與組立件設計, 過程中請拍攝零組件繪製過程, 以 "cd2024 協同產品設計實習期末實習評量項目一, 學號 XXXXXXX" 作為 mp4 影片標題, 上傳至 Youtube 後, 在個人靜態網站中新增標題為 "w17", 格式為 H1 的頁面, 嵌入所完成的項目一 Youtube 影片以及所完成的零組件檔案連結後, 將此網頁網址 (即<span> </span><a href="https://xn--_github-n14kz1hx94cem6g.github.io/cd2024/w17" rel="nofollow">https://個人_github帳號.github.io/cd2024/w17</a>) 提交連結回報至評量回傳表的對應欄位中.</p>
</li>
<li>
<p dir="auto">請自選上列項目一中某一零件組立過程, 以 NXOpen Python 程式完成組立, 過程中請拍攝 Python Journal 程式組立過程, 以"cd2024 協同產品設計實習期末實習評量項目二, 學號 XXXXXXX" 作為 mp4 影片標題, 上傳至 Youtube 後, 在 "w17" 頁面中嵌入所完成的項目二 Youtube 影片以及所完成的 Python Journal 程式檔案連結 (請放入 downloads 目錄, 並以 .txt 作為副檔名), 將此網頁網址 (即<span> </span><a href="https://xn--_github-n14kz1hx94cem6g.github.io/cd2024/w17" rel="nofollow">https://個人_github帳號.github.io/cd2024/w17</a>) 提交連結回報至評量回傳表的對應欄位中.</p>
</li>
<li>
<p dir="auto">請將所完成的機器人球員放入 CoppeliaSim 運動場景中 (即<span> </span><a href="https://mde.tw/cd2024/content/index.html" rel="nofollow">https://mde.tw/cd2024/content/index.html</a><span> </span>網頁中的<span> </span><a href="http://229.cycu.org/cd2024_footbasketball_field_specification_step2.7z" rel="nofollow">cd2024_footbasketball_field_specification_step2.7z</a><span> </span>場景), 讓球員可以由 ZMQ Remote API 程式控制, 執行後按下 w 鍵後球員可向前移動, 按下 s 後球員可向後移動, 過程中請拍攝 Python 程式執行與球員前後移動過程, 以"cd2024 協同產品設計實習期末實習評量項目三, 學號 XXXXXXX" 作為 mp4 影片標題", 上傳至 Youtube 後, 在 "w17" 頁面中嵌入所完成的項目三 Youtube 影片、場景 .ttt 連結以及所完成的 ZMQ Remote API Python 程式檔案連結 (請放入 downloads 目錄, 並以 .txt 作為副檔名), 將此網頁網址 (即<span> </span><a href="https://xn--_github-n14kz1hx94cem6g.github.io/cd2024/w17" rel="nofollow">https://個人_github帳號.github.io/cd2024/w17</a>) 提交連結回報至評量回傳表的對應欄位中.</p>
</li>
</ol>
<h2>項目一</h2>
<p>請利用 NX1872, 完成可以參與球賽競技的機器人零件與組立件設計, 過程中請拍攝零組件繪製過程, 以 "cd2024 協同產品設計實習期末實習評量項目一, 學號 XXXXXXX" 作為 mp4 影片標題, 上傳至 Youtube 後, 在個人靜態網站中新增標題為 "w17", 格式為 H1 的頁面, 嵌入所完成的項目一 Youtube 影片以及所完成的零組件檔案連結後, 將此網頁網址 (即<span> </span><a href="https://xn--_github-n14kz1hx94cem6g.github.io/cd2024/w17" rel="nofollow">https://個人_github帳號.github.io/cd2024/w17</a>) 提交連結回報至評量回傳表的對應欄位中.</p>
<p>項目一，繪製足球與籃球競賽機器人，利用錄影程式將繪製過程記錄下來，主要利用NX1872中 Menu/Tools/Journals/Record 去錄製py程式，繪製好後將py檔開啟，確認無誤後存取prt檔案，方便後去組立件的組裝叫檔。</p>
<p><a href="/downloads/w17prt.zip">w17零件檔案</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/a4MmT0m3DWg?si=DaJxbWuvRsdK2p_c" title="YouTube video player" width="560"></iframe></p><h2>項目二</h2>
<ol dir="auto">
<li>
<p dir="auto">請自選上列項目一中某一零件組立過程, 以 NXOpen Python 程式完成組立, 過程中請拍攝 Python Journal 程式組立過程, 以"cd2024 協同產品設計實習期末實習評量項目二, 學號 XXXXXXX" 作為 mp4 影片標題, 上傳至 Youtube 後, 在 "w17" 頁面中嵌入所完成的項目二 Youtube 影片以及所完成的 Python Journal 程式檔案連結 (請放入 downloads 目錄, 並以 .txt 作為副檔名), 將此網頁網址 (即<span> </span><a href="https://xn--_github-n14kz1hx94cem6g.github.io/cd2024/w17" rel="nofollow">https://個人_github帳號.github.io/cd2024/w17</a>) 提交連結回報至評量回傳表的對應欄位中.</p>
</li>
</ol>
<p><span>項目二，將項目一錄製好的py檔案開啟併利用錄影程式記錄下來，主要利用NX1872中 Menu/Tools/Journals/Play去開啟py程式，就可以呈現出繪製的過程與自動繪圖。</span></p>
<p><a href="/downloads/w17py.zip">w17py檔案</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/dW3vkIDi8VA?si=XbESnw5MfVPK149s" title="YouTube video player" width="560"></iframe></p><h2>項目三</h2>
<ol dir="auto">
<li>
<p dir="auto">請將所完成的機器人球員放入 CoppeliaSim 運動場景中 (即<span> </span><a href="https://mde.tw/cd2024/content/index.html" rel="nofollow">https://mde.tw/cd2024/content/index.html</a><span> </span>網頁中的<span> </span><a href="http://229.cycu.org/cd2024_footbasketball_field_specification_step2.7z" rel="nofollow">cd2024_footbasketball_field_specification_step2.7z</a><span> </span>場景), 讓球員可以由 ZMQ Remote API 程式控制, 執行後按下 w 鍵後球員可向前移動, 按下 s 後球員可向後移動, 過程中請拍攝 Python 程式執行與球員前後移動過程, 以"cd2024 協同產品設計實習期末實習評量項目三, 學號 XXXXXXX" 作為 mp4 影片標題", 上傳至 Youtube 後, 在 "w17" 頁面中嵌入所完成的項目三 Youtube 影片、場景 .ttt 連結以及所完成的 ZMQ Remote API Python 程式檔案連結 (請放入 downloads 目錄, 並以 .txt 作為副檔名), 將此網頁網址 (即<span> </span><a href="https://xn--_github-n14kz1hx94cem6g.github.io/cd2024/w17" rel="nofollow">https://個人_github帳號.github.io/cd2024/w17</a>) 提交連結回報至評量回傳表的對應欄位中.</p>
</li>
</ol>
<p><span>項目三，將繪製好的NX檔案匯入至CoppeliaSim中，將Joint逐一排入相對位置並給予其一定的轉動量與角度等等設定，確認無誤後並導入足球與籃球場景中，將先行更改好的程式(程式細部至w16觀看)Tools/Go啟動場景與機器人的運行，隨後利用設置好的案件(w前進、s後退、a向左轉、d向右轉、g抬大臂、h收大臂、f放小臂、r收小臂)操作機器人並利用錄製程式將成果擷取下來。</span></p>
<p><a href="/downloads/player.zip">player程式檔案</a>   <a href="/downloads/site.zip">site場景檔案</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/Op4054HDD5U?si=nYSancrfTL5C4kdx" title="YouTube video player" width="560"></iframe></p>